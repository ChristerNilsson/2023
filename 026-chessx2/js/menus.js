// Generated by CoffeeScript 2.7.0
var analyze, copyPGNToClipboard, newGame, setIncrement, setMinutes;

import {
  global
} from '../js/globals.js';

import {
  Dialogue
} from '../js/dialogue.js';

import {
  enterFullscreen
} from '../js/utils.js';

import {
  Button
} from '../js/button.js';

copyPGNToClipboard = function(txt) {
  var textarea;
  textarea = document.createElement('textarea');
  textarea.textContent = txt;
  textarea.style.position = 'fixed';
  document.body.appendChild(textarea);
  textarea.select();
  return document.execCommand('copy');
};

// document.body.removeChild textarea
analyze = (url) => {
  // [Event "Exempelturnering"]
  // [Site "Lichess"]
  // [Date "2023.05.27"]
  // [Round "1"]
  // [White "Spelare1"]
  // [Black "Spelare2"]
  // [Result "1-0"]

  //date = new Date().toISOString().slice(0,10).replace(/-/g,'.')
  //copyPGNToClipboard '[Date "'+ date + '"]\n' + global.chess.pgn()

  // window.location.href = 'https://lichess.org/paste'
  //window.location.href = 'https://lichess.org/study/pYjvo5dL'
  return window.open("mailto:janchrister.nilsson@gmail.com?subject=pgn&body=" + encodeURIComponent(global.chess.pgn()));
};

// encodedPGN = encodeURIComponent pgnString

// fetch 'https://lichess.org/api/import', {method: 'POST',headers: {'Content-Type': 'application/x-www-form-urlencoded'},body: "pgn=" + encodedPGN}
// 	.then (response) ->
// 		console.log "Statuskod: #{response.status}"
// 		response.json()
// 	.then (data) ->
// 		console.log data
// 		window.open data.url, "_blank"
// 	.catch (error) ->
// 		console.error error
newGame = () => {
  var seconds;
  global.chess.reset();
  seconds = global.minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  global.board0.clickedSquares = [];
  global.board1.clickedSquares = [];
  return global.material = 0;
};

setMinutes = function(minutes) {
  var seconds;
  global.minutes = minutes;
  seconds = minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  return global.dialogues.pop();
};

setIncrement = function(increment) {
  var seconds;
  global.increment = increment;
  seconds = global.minutes * 60 + global.increment;
  global.clocks = [seconds, seconds];
  return global.dialogues.pop();
};

export var menu0 = function() { // Main Menu
  global.dialogue = new Dialogue();
  // global.dialogue.add 'Full Screen', ->
  // 	enterFullscreen()
  // 	global.dialogues.clear()
  global.dialogue.add('Analyze', function() {
    analyze("https://lichess.org/paste");
    return global.dialogues.clear();
  });
  global.dialogue.add('New Game', function() {
    var seconds;
    newGame();
    seconds = global.minutes * 60 + global.increment;
    global.clocks = [seconds, seconds];
    console.log('newGame', global.minutes, global.increment);
    return global.dialogues.clear();
  });
  global.dialogue.add('Undo', function() {
    global.chess.undo();
    return global.dialogues.clear();
  });
  global.dialogue.add('Clock', function() {
    return menu1();
  });
  global.dialogue.add('Help', function() {
    window.open("https://github.com/ChristerNilsson/2023/tree/main/026-chessx2#chess-2x", "_blank");
    return global.dialogues.clear();
  });
  global.dialogue.clock(' ', true);
  return global.dialogue.textSize *= 1.5;
};

export var menu1 = function() { // Minutes
  var i, len, n, ref;
  global.dialogue = new Dialogue();
  ref = [1, 2, 3, 5, 10, 15, 20, 30, 45, 60, 90];
  for (i = 0, len = ref.length; i < len; i++) {
    n = ref[i];
    (function(n) {
      return global.dialogue.add(n.toString(), function() {
        setMinutes(n);
        return menu2();
      });
    })(n);
  }
  global.dialogue.clock('Min');
  return global.dialogue.textSize *= 0.5;
};

export var menu2 = function() { // Seconds
  var i, len, n, ref;
  global.dialogue = new Dialogue();
  ref = [0, 1, 2, 3, 5, 10, 15, 20, 30, 40, 50];
  for (i = 0, len = ref.length; i < len; i++) {
    n = ref[i];
    (function(n) {
      return global.dialogue.add(n.toString(), function() {
        setIncrement(n);
        return global.dialogues.pop();
      });
    })(n);
  }
  global.dialogue.clock('Sec');
  return global.dialogue.textSize *= 0.5;
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023\026-chessx2\coffee\menus.coffee