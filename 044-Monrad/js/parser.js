// Generated by CoffeeScript 2.7.0
var expr, i, j, len, ref, result, splitByTopLevelPipe, start;

export var parseExpr = function(expr) {
  var parts;
  if (expr.startsWith('(') && expr.endsWith(')')) {
    expr = expr.slice(1, -1);
  }
  parts = splitByTopLevelPipe(expr);
  return parts.map(function(part) {
    if (part.startsWith('(') && part.endsWith(')')) {
      return parseExpr(part);
    } else {
      return part;
    }
  });
};

splitByTopLevelPipe = function(expr) {
  var char, i, j, len, level, part, parts;
  parts = [];
  part = '';
  level = 0;
  for (i = j = 0, len = expr.length; j < len; i = ++j) {
    char = expr[i];
    if (char === '(') {
      level++;
    } else if (char === ')') {
      level--;
    }
    if (char === '|' && level === 0) {
      parts.push(part);
      part = '';
    } else {
      part += char;
    }
  }
  if (part) {
    parts.push(part);
  }
  return parts;
};

expr = "";

ref = _.range(100);
for (j = 0, len = ref.length; j < len; j++) {
  i = ref[j];
  expr += "(1234|Andersson_Arne|(12w1|13b½|13b½|13b½|13b½|13b½|13b½|13b½|13b½|13b½|13b½))";
}

start = new Date();

expr = expr.replaceAll('_', ' ');

expr = expr.replaceAll(')(', ')|(');

expr = '(' + expr + ')';

result = parseExpr(expr);

console.log(new Date() - start);

console.log(result);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2VyLmpzIiwic291cmNlUm9vdCI6Ii4uXFwiLCJzb3VyY2VzIjpbImNvZmZlZVxccGFyc2VyLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLE1BQUEsRUFBQSxtQkFBQSxFQUFBOztBQUFBLE9BQUEsSUFBTyxTQUFBLEdBQVksUUFBQSxDQUFDLElBQUQsQ0FBQTtBQUNuQixNQUFBO0VBQUUsSUFBRyxJQUFJLENBQUMsVUFBTCxDQUFnQixHQUFoQixDQUFBLElBQXlCLElBQUksQ0FBQyxRQUFMLENBQWMsR0FBZCxDQUE1QjtJQUFvRCxJQUFBLEdBQU8sSUFBSSxDQUFDLEtBQUwsQ0FBVyxDQUFYLEVBQWMsQ0FBQyxDQUFmLEVBQTNEOztFQUNBLEtBQUEsR0FBUSxtQkFBQSxDQUFvQixJQUFwQjtTQUNSLEtBQUssQ0FBQyxHQUFOLENBQVUsUUFBQSxDQUFDLElBQUQsQ0FBQTtJQUFVLElBQUcsSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsR0FBaEIsQ0FBQSxJQUF5QixJQUFJLENBQUMsUUFBTCxDQUFjLEdBQWQsQ0FBNUI7YUFBb0QsU0FBQSxDQUFVLElBQVYsRUFBcEQ7S0FBQSxNQUFBO2FBQXdFLEtBQXhFOztFQUFWLENBQVY7QUFIaUI7O0FBS25CLG1CQUFBLEdBQXNCLFFBQUEsQ0FBQyxJQUFELENBQUE7QUFDdEIsTUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBLElBQUEsRUFBQTtFQUFFLEtBQUEsR0FBUTtFQUNSLElBQUEsR0FBTztFQUNQLEtBQUEsR0FBUTtFQUNSLEtBQUEsOENBQUE7O0lBQ0UsSUFBRyxJQUFBLEtBQVEsR0FBWDtNQUFvQixLQUFBLEdBQXBCO0tBQUEsTUFDSyxJQUFHLElBQUEsS0FBUSxHQUFYO01BQW1CLEtBQUEsR0FBbkI7O0lBQ0wsSUFBRyxJQUFBLEtBQVEsR0FBUixJQUFnQixLQUFBLEtBQVMsQ0FBNUI7TUFDRSxLQUFLLENBQUMsSUFBTixDQUFXLElBQVg7TUFDQSxJQUFBLEdBQU8sR0FGVDtLQUFBLE1BQUE7TUFHSyxJQUFBLElBQVEsS0FIYjs7RUFIRjtFQU9BLElBQW1CLElBQW5CO0lBQUEsS0FBSyxDQUFDLElBQU4sQ0FBVyxJQUFYLEVBQUE7O1NBQ0E7QUFab0I7O0FBY3RCLElBQUEsR0FBTzs7QUFDUDtBQUFBLEtBQUEscUNBQUE7O0VBQ0ksSUFBQSxJQUFRO0FBRFo7O0FBRUEsS0FBQSxHQUFRLElBQUksSUFBSixDQUFBOztBQUNSLElBQUEsR0FBTyxJQUFJLENBQUMsVUFBTCxDQUFnQixHQUFoQixFQUFxQixHQUFyQjs7QUFDUCxJQUFBLEdBQU8sSUFBSSxDQUFDLFVBQUwsQ0FBZ0IsSUFBaEIsRUFBc0IsS0FBdEI7O0FBQ1AsSUFBQSxHQUFPLEdBQUEsR0FBTSxJQUFOLEdBQWE7O0FBQ3BCLE1BQUEsR0FBUyxTQUFBLENBQVUsSUFBVjs7QUFDVCxPQUFPLENBQUMsR0FBUixDQUFZLElBQUksSUFBSixDQUFBLENBQUEsR0FBYSxLQUF6Qjs7QUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLE1BQVoiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgcGFyc2VFeHByID0gKGV4cHIpIC0+XHJcbiAgaWYgZXhwci5zdGFydHNXaXRoKCcoJykgYW5kIGV4cHIuZW5kc1dpdGgoJyknKSB0aGVuIGV4cHIgPSBleHByLnNsaWNlIDEsIC0xXHJcbiAgcGFydHMgPSBzcGxpdEJ5VG9wTGV2ZWxQaXBlIGV4cHJcclxuICBwYXJ0cy5tYXAgKHBhcnQpIC0+IGlmIHBhcnQuc3RhcnRzV2l0aCgnKCcpIGFuZCBwYXJ0LmVuZHNXaXRoKCcpJykgdGhlbiBwYXJzZUV4cHIgcGFydCBlbHNlIHBhcnRcclxuXHJcbnNwbGl0QnlUb3BMZXZlbFBpcGUgPSAoZXhwcikgLT5cclxuICBwYXJ0cyA9IFtdXHJcbiAgcGFydCA9ICcnXHJcbiAgbGV2ZWwgPSAwXHJcbiAgZm9yIGNoYXIsIGkgaW4gZXhwclxyXG4gICAgaWYgY2hhciA9PSAnKCcgdGhlbiBsZXZlbCsrXHJcbiAgICBlbHNlIGlmIGNoYXIgPT0gJykndGhlbiBsZXZlbC0tXHJcbiAgICBpZiBjaGFyID09ICd8JyBhbmQgbGV2ZWwgPT0gMFxyXG4gICAgICBwYXJ0cy5wdXNoIHBhcnRcclxuICAgICAgcGFydCA9ICcnXHJcbiAgICBlbHNlIHBhcnQgKz0gY2hhclxyXG4gIHBhcnRzLnB1c2ggcGFydCBpZiBwYXJ0XHJcbiAgcGFydHNcclxuXHJcbmV4cHIgPSBcIlwiXHJcbmZvciBpIGluIF8ucmFuZ2UgMTAwXHJcbiAgICBleHByICs9IFwiKDEyMzR8QW5kZXJzc29uX0FybmV8KDEydzF8MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr18MTNiwr0pKVwiXHJcbnN0YXJ0ID0gbmV3IERhdGUoKVxyXG5leHByID0gZXhwci5yZXBsYWNlQWxsICdfJywgJyAnXHJcbmV4cHIgPSBleHByLnJlcGxhY2VBbGwgJykoJywgJyl8KCdcclxuZXhwciA9ICcoJyArIGV4cHIgKyAnKSdcclxucmVzdWx0ID0gcGFyc2VFeHByIGV4cHJcclxuY29uc29sZS5sb2cgbmV3IERhdGUoKSAtIHN0YXJ0XHJcbmNvbnNvbGUubG9nIHJlc3VsdFxyXG4iXX0=
//# sourceURL=c:\github\2023\044-Monrad\coffee\parser.coffee