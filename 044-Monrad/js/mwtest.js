// Generated by CoffeeScript 2.5.1
var ass, assTrue, range;

import {
  maxWeightMatching
} from './mwmatching.js';

// from math import pi,exp,sqrt
ass = function(a, b) {
  if (_.isEqual(b, maxWeightMatching(a))) {
    console.log('');
    console.log(a);
    return console.log(b, 'ok');
  } else {
    console.log('');
    console.log(a);
    return console.log(b, 'assert failure');
  }
};

assTrue = function(a, b) {
  if (_.isEqual(b, maxWeightMatching(a, true))) {
    console.log('');
    console.log(a);
    return console.log(b, 'ok');
  } else {
    console.log('');
    console.log(a);
    return console.log(b, 'assert failure');
  }
};

range = _.range;

// INPUT OUTPUT

// OK
// ass [], []
// ass [[0,1,1]], [1, 0]
// ass [ [1,2,10], [2,3,11] ], [ -1, -1, 3, 2 ]
// ass [ [1,2,5], [2,3,11], [3,4,5] ], [ -1, -1, 3, 2, -1 ]
// assTrue [ [1,2,5], [2,3,11], [3,4,5] ],  [ -1, 2, 1, 4, 3 ]

// ass [ [1,2,2], [1,3,-2], [2,3,1], [2,4,-1], [3,4,-6] ],  [ -1, 2, 1, -1, -1 ]
// ass [ [1,2,8], [1,3,9], [2,3,10], [3,4,7], [1,6,5], [4,5,6] ],  [ -1, 6, 3, 2, 5, 4, 1 ]
// ass [ [1,2,9], [1,3,8], [2,3,10], [1,4,5], [4,5,4], [1,6,3] ],  [ -1, 6, 3, 2, 5, 4, 1 ]
// ass [ [1,2,23], [1,5,22], [1,6,15], [2,3,25], [3,4,22], [4,5,25], [4,8,14], [5,7,13] ],  [ -1, 6, 3, 2, 8, 7, 1, 5, 4 ]
// assTrue [ [1,2,2], [1,3,-2], [2,3,1], [2,4,-1], [3,4,-6] ],  [ -1, 3, 4, 1, 2 ]

// ass [ [1,2,8], [1,3,9], [2,3,10], [3,4,7] ],   [ -1, 2, 1, 4, 3 ]
// ass [ [1,2,9], [1,3,8], [2,3,10], [1,4,5], [4,5,3], [1,6,4] ],  [ -1, 6, 3, 2, 5, 4, 1 ]
// ass [ [1,2,9], [1,3,8], [2,3,10], [1,4,5], [4,5,3], [3,6,4] ],  [ -1, 2, 1, 6, 5, 4, 3 ]
// ass [ [1,2,8], [1,3,8], [2,3,10], [2,4,12], [3,5,12], [4,5,14], [4,6,12], [5,7,12], [6,7,14], [7,8,12] ],  [ -1, 2, 1, 5, 6, 3, 4, 8, 7 ]
// ass [ [1,2,40], [1,3,40], [2,3,60], [2,4,55], [3,5,55], [4,5,50], [1,8,15], [5,7,30], [7,6,10], [8,10,10], [4,9,30] ],  [ -1, 2, 1, 5, 9, 3, 7, 6, 10, 4, 8 ]

// ass [ [1,2,9], [1,3,9], [2,3,10], [2,4,8], [3,5,8], [4,5,10], [5,6,6] ],  [ -1, 3, 4, 1, 2, 6, 5 ]
// ass [ [1,2,10], [1,7,10], [2,3,12], [3,4,20], [3,5,20], [4,5,25], [5,6,10], [6,7,10], [7,8,8] ], [ -1, 2, 1, 4, 3, 6, 5, 8, 7 ]
// ass [ [1,2,19], [1,3,20], [1,8,8], [2,3,25], [2,4,18], [3,5,18], [4,5,13], [4,7,7], [5,6,7] ], [ -1, 8, 3, 2, 7, 6, 5, 4, 1 ]
// ass [ [1,2,45], [1,5,45], [2,3,50], [3,4,45], [4,5,50], [1,6,30], [3,9,35], [4,8,35], [5,7,26], [9,10,5] ], [ -1, 6, 3, 2, 8, 7, 1, 5, 4, 10, 9 ]
// ass [ [1,2,45], [1,7,45], [2,3,50], [3,4,45], [4,5,95], [4,6,94], [5,6,94], [6,7,50], [1,8,30], [3,11,35], [5,9,36], [7,10,26], [11,12,5] ], [ -1, 8, 3, 2, 6, 9, 4, 10, 1, 5, 7, 12, 11 ]

// ass [ [1,2,45], [1,5,45], [2,3,50], [3,4,45], [4,5,50], [1,6,30], [3,9,35], [4,8,26], [5,7,40], [9,10,5] ], [ -1, 6, 3, 2, 8, 7, 1, 5, 4, 10, 9 ]
// ass [ [1,2,45], [1,5,45], [2,3,50], [3,4,45], [4,5,50], [1,6,30], [3,9,35], [4,8,28], [5,7,26], [9,10,5] ], [ -1, 6, 3, 2, 8, 7, 1, 5, 4, 10, 9 ]

// FAIL
// HANG
// CRASCH
console.log('Ready!');

// NOT NEEDED
// ass [ [1,2,Math.pi], [2,3,Math.exp(1)], [1,3,3.0], [1,4,Math.sqrt(2.0)] ], [ -1, 4, 3, 2, 1 ]

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXd0ZXN0LmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXG13dGVzdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQTs7QUFBQSxPQUFBO0VBQVEsaUJBQVI7Q0FBQSxNQUFBLGtCQUFBOzs7QUFHQSxHQUFBLEdBQU0sUUFBQSxDQUFDLENBQUQsRUFBRyxDQUFILENBQUE7RUFDTCxJQUFHLENBQUMsQ0FBQyxPQUFGLENBQVUsQ0FBVixFQUFhLGlCQUFBLENBQWtCLENBQWxCLENBQWIsQ0FBSDtJQUNDLE9BQU8sQ0FBQyxHQUFSLENBQVksRUFBWjtJQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksQ0FBWjtXQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksQ0FBWixFQUFjLElBQWQsRUFIRDtHQUFBLE1BQUE7SUFLQyxPQUFPLENBQUMsR0FBUixDQUFZLEVBQVo7SUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLENBQVo7V0FDQSxPQUFPLENBQUMsR0FBUixDQUFZLENBQVosRUFBYyxnQkFBZCxFQVBEOztBQURLOztBQVVOLE9BQUEsR0FBVSxRQUFBLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBQTtFQUNULElBQUcsQ0FBQyxDQUFDLE9BQUYsQ0FBVSxDQUFWLEVBQWEsaUJBQUEsQ0FBa0IsQ0FBbEIsRUFBb0IsSUFBcEIsQ0FBYixDQUFIO0lBQ0MsT0FBTyxDQUFDLEdBQVIsQ0FBWSxFQUFaO0lBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFaO1dBQ0EsT0FBTyxDQUFDLEdBQVIsQ0FBWSxDQUFaLEVBQWMsSUFBZCxFQUhEO0dBQUEsTUFBQTtJQUtDLE9BQU8sQ0FBQyxHQUFSLENBQVksRUFBWjtJQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksQ0FBWjtXQUNBLE9BQU8sQ0FBQyxHQUFSLENBQVksQ0FBWixFQUFjLGdCQUFkLEVBUEQ7O0FBRFM7O0FBVVYsS0FBQSxHQUFRLENBQUMsQ0FBQyxNQXZCVjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyREEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxRQUFaOztBQTNEQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7bWF4V2VpZ2h0TWF0Y2hpbmd9IGZyb20gJy4vbXdtYXRjaGluZy5qcydcclxuIyBmcm9tIG1hdGggaW1wb3J0IHBpLGV4cCxzcXJ0XHJcblxyXG5hc3MgPSAoYSxiKSAtPlxyXG5cdGlmIF8uaXNFcXVhbCBiLCBtYXhXZWlnaHRNYXRjaGluZyBhXHJcblx0XHRjb25zb2xlLmxvZyAnJ1xyXG5cdFx0Y29uc29sZS5sb2cgYVxyXG5cdFx0Y29uc29sZS5sb2cgYiwnb2snXHJcblx0ZWxzZVxyXG5cdFx0Y29uc29sZS5sb2cgJydcclxuXHRcdGNvbnNvbGUubG9nIGEgXHJcblx0XHRjb25zb2xlLmxvZyBiLCdhc3NlcnQgZmFpbHVyZSdcclxuXHJcbmFzc1RydWUgPSAoYSxiKSAtPlxyXG5cdGlmIF8uaXNFcXVhbCBiLCBtYXhXZWlnaHRNYXRjaGluZyBhLHRydWVcclxuXHRcdGNvbnNvbGUubG9nICcnXHJcblx0XHRjb25zb2xlLmxvZyBhXHJcblx0XHRjb25zb2xlLmxvZyBiLCdvaydcclxuXHRlbHNlXHJcblx0XHRjb25zb2xlLmxvZyAnJ1xyXG5cdFx0Y29uc29sZS5sb2cgYVxyXG5cdFx0Y29uc29sZS5sb2cgYiwnYXNzZXJ0IGZhaWx1cmUnXHJcblxyXG5yYW5nZSA9IF8ucmFuZ2VcclxuXHJcbiMgSU5QVVQgT1VUUFVUXHJcblxyXG4jIE9LXHJcbiMgYXNzIFtdLCBbXVxyXG4jIGFzcyBbWzAsMSwxXV0sIFsxLCAwXVxyXG4jIGFzcyBbIFsxLDIsMTBdLCBbMiwzLDExXSBdLCBbIC0xLCAtMSwgMywgMiBdXHJcbiMgYXNzIFsgWzEsMiw1XSwgWzIsMywxMV0sIFszLDQsNV0gXSwgWyAtMSwgLTEsIDMsIDIsIC0xIF1cclxuIyBhc3NUcnVlIFsgWzEsMiw1XSwgWzIsMywxMV0sIFszLDQsNV0gXSwgIFsgLTEsIDIsIDEsIDQsIDMgXVxyXG5cclxuIyBhc3MgWyBbMSwyLDJdLCBbMSwzLC0yXSwgWzIsMywxXSwgWzIsNCwtMV0sIFszLDQsLTZdIF0sICBbIC0xLCAyLCAxLCAtMSwgLTEgXVxyXG4jIGFzcyBbIFsxLDIsOF0sIFsxLDMsOV0sIFsyLDMsMTBdLCBbMyw0LDddLCBbMSw2LDVdLCBbNCw1LDZdIF0sICBbIC0xLCA2LCAzLCAyLCA1LCA0LCAxIF1cclxuIyBhc3MgWyBbMSwyLDldLCBbMSwzLDhdLCBbMiwzLDEwXSwgWzEsNCw1XSwgWzQsNSw0XSwgWzEsNiwzXSBdLCAgWyAtMSwgNiwgMywgMiwgNSwgNCwgMSBdXHJcbiMgYXNzIFsgWzEsMiwyM10sIFsxLDUsMjJdLCBbMSw2LDE1XSwgWzIsMywyNV0sIFszLDQsMjJdLCBbNCw1LDI1XSwgWzQsOCwxNF0sIFs1LDcsMTNdIF0sICBbIC0xLCA2LCAzLCAyLCA4LCA3LCAxLCA1LCA0IF1cclxuIyBhc3NUcnVlIFsgWzEsMiwyXSwgWzEsMywtMl0sIFsyLDMsMV0sIFsyLDQsLTFdLCBbMyw0LC02XSBdLCAgWyAtMSwgMywgNCwgMSwgMiBdXHJcblxyXG4jIGFzcyBbIFsxLDIsOF0sIFsxLDMsOV0sIFsyLDMsMTBdLCBbMyw0LDddIF0sICAgWyAtMSwgMiwgMSwgNCwgMyBdXHJcbiMgYXNzIFsgWzEsMiw5XSwgWzEsMyw4XSwgWzIsMywxMF0sIFsxLDQsNV0sIFs0LDUsM10sIFsxLDYsNF0gXSwgIFsgLTEsIDYsIDMsIDIsIDUsIDQsIDEgXVxyXG4jIGFzcyBbIFsxLDIsOV0sIFsxLDMsOF0sIFsyLDMsMTBdLCBbMSw0LDVdLCBbNCw1LDNdLCBbMyw2LDRdIF0sICBbIC0xLCAyLCAxLCA2LCA1LCA0LCAzIF1cclxuIyBhc3MgWyBbMSwyLDhdLCBbMSwzLDhdLCBbMiwzLDEwXSwgWzIsNCwxMl0sIFszLDUsMTJdLCBbNCw1LDE0XSwgWzQsNiwxMl0sIFs1LDcsMTJdLCBbNiw3LDE0XSwgWzcsOCwxMl0gXSwgIFsgLTEsIDIsIDEsIDUsIDYsIDMsIDQsIDgsIDcgXVxyXG4jIGFzcyBbIFsxLDIsNDBdLCBbMSwzLDQwXSwgWzIsMyw2MF0sIFsyLDQsNTVdLCBbMyw1LDU1XSwgWzQsNSw1MF0sIFsxLDgsMTVdLCBbNSw3LDMwXSwgWzcsNiwxMF0sIFs4LDEwLDEwXSwgWzQsOSwzMF0gXSwgIFsgLTEsIDIsIDEsIDUsIDksIDMsIDcsIDYsIDEwLCA0LCA4IF1cclxuXHJcbiMgYXNzIFsgWzEsMiw5XSwgWzEsMyw5XSwgWzIsMywxMF0sIFsyLDQsOF0sIFszLDUsOF0sIFs0LDUsMTBdLCBbNSw2LDZdIF0sICBbIC0xLCAzLCA0LCAxLCAyLCA2LCA1IF1cclxuIyBhc3MgWyBbMSwyLDEwXSwgWzEsNywxMF0sIFsyLDMsMTJdLCBbMyw0LDIwXSwgWzMsNSwyMF0sIFs0LDUsMjVdLCBbNSw2LDEwXSwgWzYsNywxMF0sIFs3LDgsOF0gXSwgWyAtMSwgMiwgMSwgNCwgMywgNiwgNSwgOCwgNyBdXHJcbiMgYXNzIFsgWzEsMiwxOV0sIFsxLDMsMjBdLCBbMSw4LDhdLCBbMiwzLDI1XSwgWzIsNCwxOF0sIFszLDUsMThdLCBbNCw1LDEzXSwgWzQsNyw3XSwgWzUsNiw3XSBdLCBbIC0xLCA4LCAzLCAyLCA3LCA2LCA1LCA0LCAxIF1cclxuIyBhc3MgWyBbMSwyLDQ1XSwgWzEsNSw0NV0sIFsyLDMsNTBdLCBbMyw0LDQ1XSwgWzQsNSw1MF0sIFsxLDYsMzBdLCBbMyw5LDM1XSwgWzQsOCwzNV0sIFs1LDcsMjZdLCBbOSwxMCw1XSBdLCBbIC0xLCA2LCAzLCAyLCA4LCA3LCAxLCA1LCA0LCAxMCwgOSBdXHJcbiMgYXNzIFsgWzEsMiw0NV0sIFsxLDcsNDVdLCBbMiwzLDUwXSwgWzMsNCw0NV0sIFs0LDUsOTVdLCBbNCw2LDk0XSwgWzUsNiw5NF0sIFs2LDcsNTBdLCBbMSw4LDMwXSwgWzMsMTEsMzVdLCBbNSw5LDM2XSwgWzcsMTAsMjZdLCBbMTEsMTIsNV0gXSwgWyAtMSwgOCwgMywgMiwgNiwgOSwgNCwgMTAsIDEsIDUsIDcsIDEyLCAxMSBdXHJcblxyXG4jIGFzcyBbIFsxLDIsNDVdLCBbMSw1LDQ1XSwgWzIsMyw1MF0sIFszLDQsNDVdLCBbNCw1LDUwXSwgWzEsNiwzMF0sIFszLDksMzVdLCBbNCw4LDI2XSwgWzUsNyw0MF0sIFs5LDEwLDVdIF0sIFsgLTEsIDYsIDMsIDIsIDgsIDcsIDEsIDUsIDQsIDEwLCA5IF1cclxuIyBhc3MgWyBbMSwyLDQ1XSwgWzEsNSw0NV0sIFsyLDMsNTBdLCBbMyw0LDQ1XSwgWzQsNSw1MF0sIFsxLDYsMzBdLCBbMyw5LDM1XSwgWzQsOCwyOF0sIFs1LDcsMjZdLCBbOSwxMCw1XSBdLCBbIC0xLCA2LCAzLCAyLCA4LCA3LCAxLCA1LCA0LCAxMCwgOSBdXHJcblxyXG4jIEZBSUxcclxuIyBIQU5HXHJcbiMgQ1JBU0NIXHJcblxyXG5jb25zb2xlLmxvZyAnUmVhZHkhJ1xyXG5cclxuIyBOT1QgTkVFREVEXHJcbiMgYXNzIFsgWzEsMixNYXRoLnBpXSwgWzIsMyxNYXRoLmV4cCgxKV0sIFsxLDMsMy4wXSwgWzEsNCxNYXRoLnNxcnQoMi4wKV0gXSwgWyAtMSwgNCwgMywgMiwgMSBdXHJcbiJdfQ==
//# sourceURL=c:\github\2023\044-Monrad\coffee\mwtest.coffee