// Generated by CoffeeScript 2.5.1
// import _ from 'https://cdn.skypack.dev/lodash'
// import {log,range,r4r} from '../js/utils.js'
var Button, buttons, curr, logg, makeButtons, tree;

import {
  spaceShip
} from '../js/utils.js';

logg = console.log;

tree = null;

curr = null;

buttons = [];

Button = class Button {
  constructor(x1, y1, width, h, title, w1, r1, b1) {
    this.draw = this.draw.bind(this);
    this.click = this.click.bind(this);
    this.x = x1;
    this.y = y1;
    this.width = width;
    this.h = h;
    this.title = title;
    this.w = w1;
    this.r = r1;
    this.b = b1;
    this.all = this.w + this.r + this.b;
    //@w=Math.round 100*@w/@all
    //@r=Math.round 100*@r/@all
    //@b=Math.round 100*@b/@all
    this.bw = this.b - this.w;
  }

  draw() {
    fill('white');
    rect(this.x, this.y, this.width, this.h);
    fill('black');
    return text(this.title + ' ' + this.all + ' ' + this.w + ' ' + this.r + ' ' + this.b, this.x + 10, this.y + 15);
  }

  click() {
    logg('click', this.title, curr);
    curr = curr[this.title];
    return makeButtons();
  }

};

window.preload = () => {
  return tree = loadJSON('tree.json');
};

window.setup = () => {
  logg(tree);
  curr = tree;
  createCanvas(400, 600);
  return makeButtons();
};

makeButtons = () => {
  var b, j, k, key, len, len1, r, ref, results, w, x, y;
  buttons = [];
  ref = _.keys(curr);
  for (j = 0, len = ref.length; j < len; j++) {
    key = ref[j];
    if (key !== 'wrb') {
      x = 10;
      y = 10 + 25 * buttons.length;
      [w, r, b] = curr[key].wrb;
      logg(w, r, b);
      buttons.push(new Button(x, y, 100, 20, key, w, r, b));
    }
    logg(key);
  }
  buttons.sort((a, b) => {
    return spaceShip(b.all, a.all);
  });
  results = [];
  for (k = 0, len1 = buttons.length; k < len1; k++) {
    b = buttons[k];
    results.push(logg(b.title, b.all));
  }
  return results;
};

window.draw = () => {
  var b, i, j, len, results;
  background('gray');
// buttons = buttons.sort (a,b) => spaceShip a.title,b.title
  results = [];
  for (i = j = 0, len = buttons.length; j < len; i = ++j) {
    b = buttons[i];
    b.y = 10 + 25 * i;
    results.push(b.draw());
  }
  return results;
};

window.mousePressed = () => {
  var b, btn, j, len;
  btn = null;
  for (j = 0, len = buttons.length; j < len; j++) {
    b = buttons[j];
    if (mouseX > b.x && mouseX < b.x + b.w && mouseY > b.y && mouseY < b.y + b.h) {
      btn = b;
    }
  }
  if (btn) {
    return btn.click();
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUM4Qzs7QUFBQSxJQUFBLE1BQUEsRUFBQSxPQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxXQUFBLEVBQUE7O0FBQzlDLE9BQUE7RUFBUSxTQUFSO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sT0FBTyxDQUFDOztBQUVmLElBQUEsR0FBTzs7QUFDUCxJQUFBLEdBQU87O0FBQ1AsT0FBQSxHQUFVOztBQUVKLFNBQU4sTUFBQSxPQUFBO0VBQ0MsV0FBYyxHQUFBLElBQUEsT0FBQSxHQUFBLE9BQUEsSUFBQSxJQUFBLElBQUEsQ0FBQTtRQU9kLENBQUEsV0FBQSxDQUFBO1FBS0EsQ0FBQSxZQUFBLENBQUE7SUFaZSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBTSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBTSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFDNUMsSUFBQyxDQUFBLEdBQUQsR0FBTyxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQSxDQUFOLEdBQVUsSUFBQyxDQUFBLEVBQXBCOzs7O0lBS0UsSUFBQyxDQUFBLEVBQUQsR0FBTSxJQUFDLENBQUEsQ0FBRCxHQUFLLElBQUMsQ0FBQTtFQU5DOztFQU9kLElBQU0sQ0FBQSxDQUFBO0lBQ0wsSUFBQSxDQUFLLE9BQUw7SUFDQSxJQUFBLENBQUssSUFBQyxDQUFBLENBQU4sRUFBUSxJQUFDLENBQUEsQ0FBVCxFQUFXLElBQUMsQ0FBQSxLQUFaLEVBQWtCLElBQUMsQ0FBQSxDQUFuQjtJQUNBLElBQUEsQ0FBSyxPQUFMO1dBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxLQUFELEdBQVMsR0FBVCxHQUFlLElBQUMsQ0FBQSxHQUFoQixHQUFzQixHQUF0QixHQUE0QixJQUFD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O1dBQVksR0FBRyxDQUFDLEtBQUosQ0FBQSxFQUFaOztBQUxxQiIsInNvdXJjZXNDb250ZW50IjpbIiMgaW1wb3J0IF8gZnJvbSAnaHR0cHM6Ly9jZG4uc2t5cGFjay5kZXYvbG9kYXNoJ1xyXG4jIGltcG9ydCB7bG9nLHJhbmdlLHI0cn0gZnJvbSAnLi4vanMvdXRpbHMuanMnXHJcbmltcG9ydCB7c3BhY2VTaGlwfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuXHJcbmxvZ2cgPSBjb25zb2xlLmxvZ1xyXG5cclxudHJlZSA9IG51bGxcclxuY3VyciA9IG51bGxcclxuYnV0dG9ucyA9IFtdXHJcblxyXG5jbGFzcyBCdXR0b25cclxuXHRjb25zdHJ1Y3RvciA6IChAeCxAeSxAd2lkdGgsQGgsQHRpdGxlLEB3LEByLEBiKSAtPlxyXG5cdFx0QGFsbCA9IEB3ICsgQHIgKyBAYlxyXG5cdFx0I0B3PU1hdGgucm91bmQgMTAwKkB3L0BhbGxcclxuXHRcdCNAcj1NYXRoLnJvdW5kIDEwMCpAci9AYWxsXHJcblx0XHQjQGI9TWF0aC5yb3VuZCAxMDAqQGIvQGFsbFxyXG5cclxuXHRcdEBidyA9IEBiIC0gQHdcclxuXHRkcmF3OiA9PlxyXG5cdFx0ZmlsbCAnd2hpdGUnXHJcblx0XHRyZWN0IEB4LEB5LEB3aWR0aCxAaFxyXG5cdFx0ZmlsbCAnYmxhY2snXHJcblx0XHR0ZXh0IEB0aXRsZSArICcgJyArIEBhbGwgKyAnICcgKyBAdyArICcgJyArIEByICsgJyAnICsgQGIsIEB4KzEwLCBAeSsxNVxyXG5cdGNsaWNrOiA9PlxyXG5cdFx0bG9nZyAnY2xpY2snLEB0aXRsZSxjdXJyXHJcblx0XHRjdXJyID0gY3VycltAdGl0bGVdXHJcblx0XHRtYWtlQnV0dG9ucygpXHJcblxyXG53aW5kb3cucHJlbG9hZCA9ID0+IHRyZWUgPSBsb2FkSlNPTiAndHJlZS5qc29uJ1xyXG5cclxud2luZG93LnNldHVwID0gPT5cclxuXHRsb2dnIHRyZWVcclxuXHRjdXJyID0gdHJlZVxyXG5cdGNyZWF0ZUNhbnZhcyA0MDAsNjAwXHJcblx0bWFrZUJ1dHRvbnMoKVxyXG5cclxubWFrZUJ1dHRvbnMgPSA9PlxyXG5cdGJ1dHRvbnMgPSBbXVxyXG5cdGZvciBrZXkgaW4gXy5rZXlzIGN1cnJcclxuXHRcdGlmIGtleSAhPSAnd3JiJ1xyXG5cdFx0XHR4ID0gMTBcclxuXHRcdFx0eSA9IDEwKzI1KmJ1dHRvbnMubGVuZ3RoXHJcblx0XHRcdFt3LHIsYl0gPSBjdXJyW2tleV0ud3JiXHJcblx0XHRcdGxvZ2cgdyxyLGJcclxuXHRcdFx0YnV0dG9ucy5wdXNoIG5ldyBCdXR0b24geCx5LDEwMCwyMCxrZXksdyxyLGJcclxuXHRcdGxvZ2cga2V5XHJcblxyXG5cdGJ1dHRvbnMuc29ydCAoYSxiKSA9PiBzcGFjZVNoaXAgYi5hbGwsYS5hbGxcclxuXHJcblx0Zm9yIGIgaW4gYnV0dG9uc1xyXG5cdFx0bG9nZyBiLnRpdGxlLGIuYWxsXHJcblxyXG53aW5kb3cuZHJhdyA9ID0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHQjIGJ1dHRvbnMgPSBidXR0b25zLnNvcnQgKGEsYikgPT4gc3BhY2VTaGlwIGEudGl0bGUsYi50aXRsZVxyXG5cdGZvciBiLGkgaW4gYnV0dG9uc1xyXG5cdFx0Yi55ID0gMTArMjUqaVxyXG5cdFx0Yi5kcmF3KClcclxuXHJcbndpbmRvdy5tb3VzZVByZXNzZWQgPSA9PlxyXG5cdGJ0biA9IG51bGxcclxuXHRmb3IgYiBpbiBidXR0b25zXHJcblx0XHRpZiBtb3VzZVggPiBiLnggYW5kIG1vdXNlWCA8IGIueCtiLncgYW5kIG1vdXNlWSA+IGIueSBhbmQgbW91c2VZIDwgYi55K2IuaFxyXG5cdFx0XHRidG4gPSBiXHJcblx0aWYgYnRuIHRoZW4gYnRuLmNsaWNrKClcclxuIl19
//# sourceURL=c:\github\2023-015-openings\coffee\sketch.coffee