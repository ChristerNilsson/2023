import os
import time
import markdown
from markdown.extensions.tables import TableExtension

# Idé: Skapa .lnk-filer som hanteras som länkar. filnamnet visas, innehållet blir href. Förenklar flytt.
# Innebär att Startbilden påverkas. Kanske behövs ett kommando i .md-filen a la CONTENT. NEWS?

file_count = 0
md_bytes = 0
html_bytes = 0

settings = {
	'rootFolder': "Seniorschack_Stockholm",
	'fontFamily': "monospace",
	'fontSize': "24px",
	'margin': '5px',
	'linkColor': '#ff8',

	'trans': {
		'<red>':   '<div style=color:#F00>',   '</red>': '</div>',
		'<green>': '<div style=color:#0A0>', '</green>': '</div>',
		'<black>': '<div style=color:#000>', '</black>': '</div>',
	},
	'showExt': False,
}

def writeHtmlFile(filename, title, content=""):
	index = 1 + filename.rindex("\\")
	short_md = filename[index:].replace('.html','.md')
	long_md = filename.replace('.html','.md')
	global file_count
	global html_bytes

	res = []
	res.append('<!-- Generated by makeAll.py 1.0 -->')
	res.append('<html>')
	res.append('<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />')
	res.append('<head>')
	res.append(f'	<title>{title}</title>')
	res.append('	<meta charset = "utf-8"/>')
	res.append("	<style> body { font-family:" + settings['fontFamily'] + "; font-size:" + settings['fontSize'] + "} </style>")
	res.append("	<style> a { text-decoration:none; background-color:" + settings['linkColor'] + " } </style>")
	res.append("	<style> div { margin-bottom:" + settings['margin'] + " } </style>")
	res.append("	<style> table, th, td { border: 1px solid black; border-collapse: collapse; font-family:" + settings['fontFamily'] + "; font-size:" + settings['fontSize'] + "} </style>")
	res.append('</head>')
	res.append('<body>')
	res += [f"<h1>{title}</h1>"]
	res += [content]
	res.append('</body>')
	if os.path.exists(long_md):
		res.append('<footer style=" text-align: right">')
		res.append(f'	<p><a href="{short_md}">markdown</a></p>')
		res.append("</footer>")
	res.append('</html>')

	print(short_md, '=>', filename)
	file_count += 1
	with open(filename, 'w', encoding='utf8') as g:
		s = '\n'.join(res)
		g.write(s)
		html_bytes += len(s)


def title(s): return s.replace('.md','')

def noExt(s):
	s = s.replace("_", " ")
	if settings['showExt']: return s
	else: return s.replace(".pdf", "").replace(".md", "").replace(".xls", "")

def transpileDir(directory):

	if type(directory) is str:
		path = directory
		name = directory
	else:
		path = directory.path
		name = directory.name

	if name == 'files': return

	name = name.replace("_", " ")
	res = []

	indexHtml = ""

	for f in os.scandir(path):
		if os.path.isfile(f):
			if f.name.endswith('.html'):
				pass
			elif f.name.endswith('index.md'):
				indexHtml = transpileFile(f.path)
			elif f.name.endswith('.md'):
				filename = f.path.replace('.md', '.html')
				writeHtmlFile(filename, title(f.name), transpileFile(f.path))
				res += [f"<div><a href='{f.name.replace('.md', '.html')}'>{f.name.replace('.md', '')}</a></div>\n"]
			else:
				res += [f"<div><a href='{f.name}'>{noExt(f.name)}</a></div>\n"]
		else:
			if f.name != 'files':
				res += [f"<div><a href='{f.name}\\index.html'>{f.name}</a></div>\n"]
				transpileDir(f)

	if indexHtml == "":
		indexHtml = "\n".join(res)
	else:
		indexHtml = indexHtml.replace("CONTENT","\n".join(res))

	writeHtmlFile(path + '\\index.html', title(name), indexHtml)

def patch(s):
	# Reason: To have some whitespace between links
	s = s.replace('<p><a href=','<div><a href=')
	s = s.replace('</a></p>','</a></div>')
	return s

def transpileFile(filename):
	global md_bytes

	with open(filename,encoding='utf8') as f:
		md = f.read()
		html = markdown.markdown(md,extensions=[TableExtension(use_align_attribute=True)])
		html = patch(html)
		md_bytes += len(md)
	trans = settings['trans']
	for key in trans:
		html = html.replace(key,trans[key])
	return html

start = time.time_ns()
transpileDir(settings['rootFolder'])
print(md_bytes,'=>',html_bytes,'bytes')
print(file_count, 'files took', round((time.time_ns() - start)/10**6),'ms')
