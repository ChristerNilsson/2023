// Generated by CoffeeScript 2.5.1
// Bouncing Ball
var Ball, antal, balls, print;

balls = [];

print = console.log;

antal = 0;

Ball = class Ball {
  constructor(x1, y1, r, dx, dy1, colors) {
    this.x = x1;
    this.y = y1;
    this.r = r;
    this.dx = dx;
    this.dy = dy1;
    this.colors = colors;
    this.antal = 0;
  }

  draw() {
    strokeWeight(2);
    this.antal += 1;
    fill(this.colors[this.antal % this.colors.length]);
    return circle(this.x, this.y, this.r);
  }

  updatePosition() {
    this.x += this.dx;
    return this.y += this.dy;
  }

  updateSpeed() {
    if (this.x - this.r < 0 || width < this.x + this.r) {
      this.dx = -this.dx;
    }
    if (height < this.y + this.r) {
      return this.dy = -this.dy;
    } else {
      return this.dy += 1;
    }
  }

};

window.setup = function() {
  createCanvas(windowWidth - 50, windowHeight - 50);
  stroke('black');
  return background('gray');
};

window.draw = function() {
  var ball, j, len, results;
  textSize(50);
  text(antal, 100, 100);
  results = [];
  for (j = 0, len = balls.length; j < len; j++) {
    ball = balls[j];
    ball.draw();
    ball.updatePosition();
    results.push(ball.updateSpeed());
  }
  return results;
};

window.mousePressed = function() {
  var col, dy, i, j, len, ref, results, x, y;
  antal += 1;
  ref = _.range(1);
  results = [];
  for (j = 0, len = ref.length; j < len; j++) {
    i = ref[j];
    x = mouseX; //_.sample [0.1*width,0.2*width]
    y = mouseY; //_.sample [0,92,95,96,97,99,100]
    dy = _.sample([4, 5, 7, 8, 9, 10]);
    col = ['red', 'blue', 'green', 'yellow', 'white', 'orange', 'Chartreuse'];
    results.push(balls.push(new Ball(x, y, 42, 5, dy, _.sampleSize(col, _.sample([2, 3])))));
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFlO0FBQUEsSUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFDZixLQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFRLE9BQU8sQ0FBQzs7QUFDaEIsS0FBQSxHQUFNOztBQUVBLE9BQU4sTUFBQSxLQUFBO0VBQ0MsV0FBYyxHQUFBLElBQUEsR0FBQSxJQUFBLEtBQUEsUUFBQSxDQUFBO0lBQUMsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUksSUFBQyxDQUFBO0lBQVcsSUFBQyxDQUFBLEtBQUQsR0FBTztFQUF4Qzs7RUFDZCxJQUFPLENBQUEsQ0FBQTtJQUNOLFlBQUEsQ0FBYSxDQUFiO0lBQ0EsSUFBQyxDQUFBLEtBQUQsSUFBUztJQUNULElBQUEsQ0FBTSxJQUFDLENBQUEsTUFBTSxDQUFDLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBQyxDQUFBLE1BQU0sQ0FBQyxNQUFsQixDQUFiO1dBQ0EsTUFBQSxDQUFPLElBQUMsQ0FBQSxDQUFSLEVBQVUsSUFBQyxDQUFBLENBQVgsRUFBYSxJQUFDLENBQUEsQ0FBZDtFQUpNOztFQUtQLGNBQWtCLENBQUEsQ0FBQTtJQUNqQixJQUFDLENBQUEsQ0FBRCxJQUFNLElBQUMsQ0FBQTtXQUNQLElBQUMsQ0FBQSxDQUFELElBQU0sSUFBQyxDQUFBO0VBRlU7O0VBR2xCLFdBQWUsQ0FBQSxDQUFBO0lBQ2QsSUFBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFKLEdBQVEsQ0FBUixJQUFhLEtBQUEsR0FBUSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUE1QjtNQUFtQyxJQUFDLENBQUEsRUFBRCxHQUFNLENBQUMsSUFBQyxDQUFBLEdBQTNDOztJQUNBLElBQUcsTUFBQSxHQUFTLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQWhCO2FBQXVCLElBQUMsQ0FBQSxFQUFELEdBQU0sQ0FBQyxJQUFDLENBQUEsR0FBL0I7S0FBQSxNQUFBO2FBQXVDLElBQUMsQ0FBQSxFQUFELElBQU8sRUFBOUM7O0VBRmM7O0FBVmhCOztBQWNBLE1BQU0sQ0FBQyxLQUFQLEdBQWUsUUFBQSxDQUFBLENBQUE7RUFDZCxZQUFBLENBQWEsV0FBQSxHQUFZLEVBQXpCLEVBQTRCLFlBQUEsR0FBYSxFQUF6QztFQUNBLE1BQUEsQ0FBTyxPQUFQO1NBQ0EsVUFBQSxDQUFXLE1BQVg7QUFIYzs7QUFLZixNQUFNLENBQUMsSUFBUCxHQUFjLFFBQUEsQ0FBQSxDQUFBO0FBQ2QsTUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQTtFQUFDLFFBQUEsQ0FBUyxFQUFUO0VBQ0EsSUFBQSxDQUFLLEtBQUwsRUFBVyxHQUFYLEVBQWUsR0FBZjtBQUNBO0VBQUEsS0FBQSx1Q0FBQTs7SUFDQyxJQUFJLENBQUMsSUFBTCxDQUFBO0lBQ0EsSUFBSSxDQUFDLGNBQUwsQ0FBQTtpQkFDQSxJQUFJLENBQUMsV0FBTCxDQUFBO0VBSEQsQ0FBQTs7QUFIYTs7QUFRZCxNQUFNLENBQUMsWUFBUCxHQUFvQixRQUFBLENBQUEsQ0FBQTtBQUNwQixNQUFBLEdBQUEsRUFBQSxFQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUE7RUFBQyxLQUFBLElBQVM7QUFDVDtBQUFBO0VBQUEsS0FBQSxxQ0FBQTs7SUFDQyxDQUFBLEdBQUksT0FBTjtJQUNFLENBQUEsR0FBSSxPQUROO0lBRUUsRUFBQSxHQUFLLENBQUMsQ0FBQyxNQUFGLENBQVMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxFQUFLLENBQUwsRUFBTyxDQUFQLEVBQVMsQ0FBVCxFQUFXLEVBQVgsQ0FBVDtJQUNMLEdBQUEsR0FBTSxDQUFDLEtBQUQsRUFBTyxNQUFQLEVBQWMsT0FBZCxFQUFzQixRQUF0QixFQUErQixPQUEvQixFQUF1QyxRQUF2QyxFQUFnRCxZQUFoRDtpQkFDTixLQUFLLENBQUMsSUFBTixDQUFXLElBQUksSUFBSixDQUFTLENBQVQsRUFBVyxDQUFYLEVBQWMsRUFBZCxFQUFrQixDQUFsQixFQUFvQixFQUFwQixFQUF3QixDQUFDLENBQUMsVUFBRixDQUFhLEdBQWIsRUFBaUIsQ0FBQyxDQUFDLE1BQUYsQ0FBUyxDQUFDLENBQUQsRUFBRyxDQUFILENBQVQsQ0FBakIsQ0FBeEIsQ0FBWDtFQUxELENBQUE7O0FBRm1CIiwic291cmNlc0NvbnRlbnQiOlsiIyBCb3VuY2luZyBCYWxsXHJcbmJhbGxzID0gW11cclxucHJpbnQgPSBjb25zb2xlLmxvZ1xyXG5hbnRhbD0wXHJcblxyXG5jbGFzcyBCYWxsXHJcblx0Y29uc3RydWN0b3IgOiAoQHgsQHksIEByLCBAZHgsQGR5LCBAY29sb3JzKSAtPiBAYW50YWw9MFxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0c3Ryb2tlV2VpZ2h0IDJcclxuXHRcdEBhbnRhbCArPTFcclxuXHRcdGZpbGwgIEBjb2xvcnNbQGFudGFsICUgQGNvbG9ycy5sZW5ndGhdXHJcblx0XHRjaXJjbGUgQHgsQHksQHJcclxuXHR1cGRhdGVQb3NpdGlvbiA6ICAtPlxyXG5cdFx0QHggKz0gQGR4XHJcblx0XHRAeSArPSBAZHlcclxuXHR1cGRhdGVTcGVlZCA6ICAtPlxyXG5cdFx0aWYgQHgtQHIgPCAwIG9yIHdpZHRoIDwgQHgrQHIgdGhlbiBAZHggPSAtQGR4XHJcblx0XHRpZiBoZWlnaHQgPCBAeStAciB0aGVuIEBkeSA9IC1AZHkgZWxzZSBAZHkgKz0gMVxyXG5cclxud2luZG93LnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgtNTAsd2luZG93SGVpZ2h0LTUwXHJcblx0c3Ryb2tlICdibGFjaydcclxuXHRiYWNrZ3JvdW5kICdncmF5J1xyXG5cclxud2luZG93LmRyYXcgPSAtPlxyXG5cdHRleHRTaXplIDUwXHJcblx0dGV4dCBhbnRhbCwxMDAsMTAwXHJcblx0Zm9yIGJhbGwgaW4gYmFsbHNcclxuXHRcdGJhbGwuZHJhdygpXHJcblx0XHRiYWxsLnVwZGF0ZVBvc2l0aW9uKClcclxuXHRcdGJhbGwudXBkYXRlU3BlZWQoKVxyXG5cclxud2luZG93Lm1vdXNlUHJlc3NlZD0tPlxyXG5cdGFudGFsICs9IDFcclxuXHRmb3IgaSBpbiBfLnJhbmdlIDFcclxuXHRcdHggPSBtb3VzZVggI18uc2FtcGxlIFswLjEqd2lkdGgsMC4yKndpZHRoXVxyXG5cdFx0eSA9IG1vdXNlWSAjXy5zYW1wbGUgWzAsOTIsOTUsOTYsOTcsOTksMTAwXVxyXG5cdFx0ZHkgPSBfLnNhbXBsZSBbNCw1LDcsOCw5LDEwXVxyXG5cdFx0Y29sID0gWydyZWQnLCdibHVlJywnZ3JlZW4nLCd5ZWxsb3cnLCd3aGl0ZScsJ29yYW5nZScsJ0NoYXJ0cmV1c2UnXVxyXG5cdFx0YmFsbHMucHVzaCBuZXcgQmFsbCB4LHksIDQyLCA1LGR5LCBfLnNhbXBsZVNpemUgY29sLF8uc2FtcGxlIFsyLDNdXHJcbiJdfQ==
//# sourceURL=c:\github\2023\045-Numa\coffee\sketch.coffee