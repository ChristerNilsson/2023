// Generated by CoffeeScript 2.5.1
// Bouncing Ball
var Ball, antal, balls, print, range;

balls = [];

print = console.log;

range = _.range;

antal = 0;

Ball = class Ball {
  constructor(x1, y1, r, dx1, dy1, color) {
    this.x = x1;
    this.y = y1;
    this.r = r;
    this.dx = dx1;
    this.dy = dy1;
    this.color = color;
    this.antal = 0;
  }

  draw() {
    strokeWeight(2);
    this.antal += 1;
    fill(this.color); //s[@antal % @colors.length]
    return circle(this.x, this.y, 2 * this.r);
  }

  updatePosition() {
    this.x += this.dx;
    return this.y += this.dy;
  }

  updateSpeed() {
    if (this.x - this.r < 0 || width < this.x + this.r) {
      this.dx = -this.dx;
    }
    if (height < this.y + this.r) {
      return this.dy = -this.dy;
    } else {
      return this.dy += 1;
    }
  }

  krock(other) {
    var dx, dy;
    dx = this.x - other.x;
    dy = this.y - other.y;
    return this.r > sqrt(dx * dx + dy * dy);
  }

  studs(other) {
    [other.dx, this.dx] = [this.dx, other.dx];
    return [other.dy, this.dy] = [this.dy, other.dy];
  }

};

window.setup = function() {
  createCanvas(windowWidth - 50, windowHeight - 50);
  return stroke('black');
};

window.draw = function() {
  var ball, i, j, k, l, len, len1, ref, results;
  background('gray');
  textSize(50);
  text(antal, 100, 100);
  for (k = 0, len = balls.length; k < len; k++) {
    ball = balls[k];
    ball.draw();
    ball.updatePosition();
    ball.updateSpeed();
  }
  ref = range(balls.length);
  results = [];
  for (l = 0, len1 = ref.length; l < len1; l++) {
    i = ref[l];
    results.push((function() {
      var len2, m, ref1, results1;
      ref1 = range(i + 1, balls.length);
      results1 = [];
      for (m = 0, len2 = ref1.length; m < len2; m++) {
        j = ref1[m];
        if (balls[i].krock(balls[j])) {
          results1.push(balls[i].studs(balls[j]));
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

window.mousePressed = function() {
  var col, dy, x, y;
  antal += 1;
  x = mouseX;
  y = mouseY;
  dy = _.sample([4, 5, 7, 8, 9, 10]);
  col = ['red', 'blue', 'green', 'yellow', 'white', 'orange', 'Chartreuse'];
  return balls.push(new Ball(x, y, 40, 5, dy, _.sample(col)));
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm91bmNpbmdCYWxscy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxib3VuY2luZ0JhbGxzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQWU7QUFBQSxJQUFBLElBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFDZixLQUFBLEdBQVE7O0FBQ1IsS0FBQSxHQUFRLE9BQU8sQ0FBQzs7QUFDaEIsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFDVixLQUFBLEdBQVE7O0FBRUYsT0FBTixNQUFBLEtBQUE7RUFDQyxXQUFjLEdBQUEsSUFBQSxHQUFBLEtBQUEsS0FBQSxPQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBSSxJQUFDLENBQUE7SUFBVSxJQUFDLENBQUEsS0FBRCxHQUFTO0VBQXpDOztFQUNkLElBQU8sQ0FBQSxDQUFBO0lBQ04sWUFBQSxDQUFhLENBQWI7SUFDQSxJQUFDLENBQUEsS0FBRCxJQUFVO0lBQ1YsSUFBQSxDQUFNLElBQUMsQ0FBQSxLQUFQLEVBRkY7V0FHRSxNQUFBLENBQU8sSUFBQyxDQUFBLENBQVIsRUFBVSxJQUFDLENBQUEsQ0FBWCxFQUFhLENBQUEsR0FBRSxJQUFDLENBQUEsQ0FBaEI7RUFKTTs7RUFLUCxjQUFpQixDQUFBLENBQUE7SUFDaEIsSUFBQyxDQUFBLENBQUQsSUFBTSxJQUFDLENBQUE7V0FDUCxJQUFDLENBQUEsQ0FBRCxJQUFNLElBQUMsQ0FBQTtFQUZTOztFQUdqQixXQUFjLENBQUEsQ0FBQTtJQUNiLElBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBSixHQUFRLENBQVIsSUFBYSxLQUFBLEdBQVEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBNUI7TUFBbUMsSUFBQyxDQUFBLEVBQUQsR0FBTSxDQUFDLElBQUMsQ0FBQSxHQUEzQzs7SUFDQSxJQUFHLE1BQUEsR0FBUyxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFoQjthQUF1QixJQUFDLENBQUEsRUFBRCxHQUFNLENBQUMsSUFBQyxDQUFBLEdBQS9CO0tBQUEsTUFBQTthQUF1QyxJQUFDLENBQUEsRUFBRCxJQUFPLEVBQTlDOztFQUZhOztFQUdkLEtBQVEsQ0FBQyxLQUFELENBQUE7QUFDVCxRQUFBLEVBQUEsRUFBQTtJQUFFLEVBQUEsR0FBSyxJQUFDLENBQUEsQ0FBRCxHQUFLLEtBQUssQ0FBQztJQUNoQixFQUFBLEdBQUssSUFBQyxDQUFBLENBQUQsR0FBSyxLQUFLLENBQUM7V0FDaEIsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFBLENBQUssRUFBQSxHQUFHLEVBQUgsR0FBUSxFQUFBLEdBQUcsRUFBaEI7RUFIRTs7RUFJUixLQUFRLENBQUMsS0FBRCxDQUFBO0lBQ1AsQ0FBQyxLQUFLLENBQUMsRUFBUCxFQUFVLElBQUMsQ0FBQSxFQUFYLENBQUEsR0FBaUIsQ0FBQyxJQUFDLENBQUEsRUFBRixFQUFLLEtBQUssQ0FBQyxFQUFYO1dBQ2pCLENBQUMsS0FBSyxDQUFDLEVBQVAsRUFBVSxJQUFDLENBQUEsRUFBWCxDQUFBLEdBQWlCLENBQUMsSUFBQyxDQUFBLEVBQUYsRUFBSyxLQUFLLENBQUMsRUFBWDtFQUZWOztBQWpCVDs7QUFxQkEsTUFBTSxDQUFDLEtBQVAsR0FBZSxRQUFBLENBQUEsQ0FBQTtFQUNkLFlBQUEsQ0FBYSxXQUFBLEdBQVksRUFBekIsRUFBNEIsWUFBQSxHQUFhLEVBQXpDO1NBQ0EsTUFBQSxDQUFPLE9BQVA7QUFGYzs7QUFJZixNQUFNLENBQUMsSUFBUCxHQUFjLFFBQUEsQ0FBQSxDQUFBO0FBQ2QsTUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUMsVUFBQSxDQUFXLE1BQVg7RUFDQSxRQUFBLENBQVMsRUFBVDtFQUNBLElBQUEsQ0FBSyxLQUFMLEVBQVcsR0FBWCxFQUFlLEdBQWY7RUFDQSxLQUFBLHVDQUFBOztJQUNDLElBQUksQ0FBQyxJQUFMLENBQUE7SUFDQSxJQUFJLENBQUMsY0FBTCxDQUFBO0lBQ0EsSUFBSSxDQUFDLFdBQUwsQ0FBQTtFQUhEO0FBSUE7QUFBQTtFQUFBLEtBQUEsdUNBQUE7Ozs7QUFDQztBQUFBO01BQUEsS0FBQSx3Q0FBQTs7UUFDQyxJQUFHLEtBQUssQ0FBQyxDQUFELENBQUcsQ0FBQyxLQUFULENBQWUsS0FBSyxDQUFDLENBQUQsQ0FBcEIsQ0FBSDt3QkFDQyxLQUFLLENBQUMsQ0FBRCxDQUFHLENBQUMsS0FBVCxDQUFlLEtBQUssQ0FBQyxDQUFELENBQXBCLEdBREQ7U0FBQSxNQUFBO2dDQUFBOztNQURELENBQUE7OztFQURELENBQUE7O0FBUmE7O0FBYWQsTUFBTSxDQUFDLFlBQVAsR0FBc0IsUUFBQSxDQUFBLENBQUE7QUFDdEIsTUFBQSxHQUFBLEVBQUEsRUFBQSxFQUFBLENBQUEsRUFBQTtFQUFDLEtBQUEsSUFBUztFQUNULENBQUEsR0FBSTtFQUNKLENBQUEsR0FBSTtFQUNKLEVBQUEsR0FBSyxDQUFDLENBQUMsTUFBRixDQUFTLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQsRUFBVyxFQUFYLENBQVQ7RUFDTCxHQUFBLEdBQU0sQ0FBQyxLQUFELEVBQU8sTUFBUCxFQUFjLE9BQWQsRUFBc0IsUUFBdEIsRUFBK0IsT0FBL0IsRUFBdUMsUUFBdkMsRUFBZ0QsWUFBaEQ7U0FDTixLQUFLLENBQUMsSUFBTixDQUFXLElBQUksSUFBSixDQUFTLENBQVQsRUFBVyxDQUFYLEVBQWMsRUFBZCxFQUFrQixDQUFsQixFQUFvQixFQUFwQixFQUF3QixDQUFDLENBQUMsTUFBRixDQUFTLEdBQVQsQ0FBeEIsQ0FBWDtBQU5xQiIsInNvdXJjZXNDb250ZW50IjpbIiMgQm91bmNpbmcgQmFsbFxyXG5iYWxscyA9IFtdXHJcbnByaW50ID0gY29uc29sZS5sb2dcclxucmFuZ2UgPSBfLnJhbmdlXHJcbmFudGFsID0gMFxyXG5cclxuY2xhc3MgQmFsbFxyXG5cdGNvbnN0cnVjdG9yIDogKEB4LEB5LCBAciwgQGR4LEBkeSwgQGNvbG9yKSAtPiBAYW50YWwgPSAwIFxyXG5cdGRyYXcgOiAtPlxyXG5cdFx0c3Ryb2tlV2VpZ2h0IDJcclxuXHRcdEBhbnRhbCArPSAxXHJcblx0XHRmaWxsICBAY29sb3IgI3NbQGFudGFsICUgQGNvbG9ycy5sZW5ndGhdXHJcblx0XHRjaXJjbGUgQHgsQHksMipAclxyXG5cdHVwZGF0ZVBvc2l0aW9uIDogLT5cclxuXHRcdEB4ICs9IEBkeFxyXG5cdFx0QHkgKz0gQGR5XHJcblx0dXBkYXRlU3BlZWQgOiAtPlxyXG5cdFx0aWYgQHgtQHIgPCAwIG9yIHdpZHRoIDwgQHgrQHIgdGhlbiBAZHggPSAtQGR4XHJcblx0XHRpZiBoZWlnaHQgPCBAeStAciB0aGVuIEBkeSA9IC1AZHkgZWxzZSBAZHkgKz0gMVxyXG5cdGtyb2NrIDogKG90aGVyKSAtPlxyXG5cdFx0ZHggPSBAeCAtIG90aGVyLnhcclxuXHRcdGR5ID0gQHkgLSBvdGhlci55XHJcblx0XHRAciA+IHNxcnQgZHgqZHggKyBkeSpkeVxyXG5cdHN0dWRzIDogKG90aGVyKSAtPlxyXG5cdFx0W290aGVyLmR4LEBkeF0gPSBbQGR4LG90aGVyLmR4XVxyXG5cdFx0W290aGVyLmR5LEBkeV0gPSBbQGR5LG90aGVyLmR5XVxyXG5cclxud2luZG93LnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgtNTAsd2luZG93SGVpZ2h0LTUwXHJcblx0c3Ryb2tlICdibGFjaydcclxuXHJcbndpbmRvdy5kcmF3ID0gLT5cclxuXHRiYWNrZ3JvdW5kICdncmF5J1xyXG5cdHRleHRTaXplIDUwXHJcblx0dGV4dCBhbnRhbCwxMDAsMTAwXHJcblx0Zm9yIGJhbGwgaW4gYmFsbHNcclxuXHRcdGJhbGwuZHJhdygpXHJcblx0XHRiYWxsLnVwZGF0ZVBvc2l0aW9uKClcclxuXHRcdGJhbGwudXBkYXRlU3BlZWQoKVxyXG5cdGZvciBpIGluIHJhbmdlIGJhbGxzLmxlbmd0aFxyXG5cdFx0Zm9yIGogaW4gcmFuZ2UgaSsxLCBiYWxscy5sZW5ndGhcclxuXHRcdFx0aWYgYmFsbHNbaV0ua3JvY2sgYmFsbHNbal1cclxuXHRcdFx0XHRiYWxsc1tpXS5zdHVkcyBiYWxsc1tqXVxyXG5cclxud2luZG93Lm1vdXNlUHJlc3NlZCA9IC0+XHJcblx0YW50YWwgKz0gMVxyXG5cdHggPSBtb3VzZVhcclxuXHR5ID0gbW91c2VZXHJcblx0ZHkgPSBfLnNhbXBsZSBbNCw1LDcsOCw5LDEwXVxyXG5cdGNvbCA9IFsncmVkJywnYmx1ZScsJ2dyZWVuJywneWVsbG93Jywnd2hpdGUnLCdvcmFuZ2UnLCdDaGFydHJldXNlJ11cclxuXHRiYWxscy5wdXNoIG5ldyBCYWxsIHgseSwgNDAsIDUsZHksIF8uc2FtcGxlIGNvbFxyXG4iXX0=
//# sourceURL=c:\github\2023\045-Numa\coffee\bouncingBalls.coffee