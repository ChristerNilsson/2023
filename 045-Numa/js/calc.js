// Generated by CoffeeScript 2.5.1
// Övriga siffror
// Addition, Multiplikation, Division,Subtraktion, 1/x
// Pi (x => 3.14)
// Swap (x och y byter plats)
// Clear All (xyzt -> 0000)
// Roll Down (xyzt -> yztx)
// Change Sign (x -> -x)
// Backspace (sista siffran tas bort eller x rensas)
// Upphöjt till (x -> y**x)
// Kvadratrot (x -> sqrt(x))
// Decimalpunkt
// Bithantering: and or xor
// Fakultet (5 ! -> 120)
// Logaritmer Trigonometri
// Exponent

// https://p5js.org/reference
//  createCanvas width height window.setup window.draw background
//  rectMode CENTER rect circle
//  fill stroke strokeWeight
//  text textFont textSize textAlign CENTER LEFT
//  mousePressed mouseMoved mouseX mouseY

// https://www.w3schools.com/js
//  windowWidth windowHeight
//  red green blue ...
//  push pop
//  unshift shift
//  console.log

// https://coffeescript.org
//  class constructor new
//  () ->
//  for in
//  if then else

// https://lodash.com
//  _.range _.sample _.sampleSize

// Christers namn:
//  knappar stack inmatning koordinater Knapp rita inuti @titel @x @y @w @h @klick
var Knapp, PI, inmatning, klickapåKnapp, knappar, print, range, stack;

knappar = [];

stack = [
  1,
  2,
  3,
  4 // [x,y,z,t] [0,1,2,3]
];

inmatning = false;

PI = 3.14159265359;

print = console.log;

range = _.range;

Knapp = class Knapp {
  constructor(titel, x1, y1, w, h, klick) {
    this.titel = titel;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.klick = klick;
  }

  rita() {
    rect(this.x, this.y, this.w, this.h);
    return text(this.titel, this.x, this.y + 3);
  }

  inuti() {
    return (this.x - this.w / 2 < mouseX && mouseX < this.x + this.w / 2) && (this.y - this.h / 2 < mouseY && mouseY < this.y + this.h / 2);
  }

};

window.setup = function() {
  var op0, op1, op2;
  createCanvas(360, 450);
  rectMode(CENTER);
  textFont('Courier New');
  textSize(22);
  textAlign(CENTER, CENTER);
  knappar.push(new Knapp('enter', 75, 170, 130, 40, function() {
    stack.unshift(stack[0]);
    stack.pop();
    return inmatning = false;
  }));
  knappar.push(new Knapp('clx', 180, 170, 60, 40, function() {
    return stack[0] = 0;
  }));
  knappar.push(new Knapp('1', 40, 220, 60, 40, function() {
    return klickapåKnapp(1);
  }));
  knappar.push(new Knapp('2', 110, 220, 60, 40, function() {
    return klickapåKnapp(2);
  }));
  knappar.push(new Knapp('3', 180, 220, 60, 40, function() {
    return klickapåKnapp(3);
  }));
  knappar.push(new Knapp('4', 40, 270, 60, 40, function() {
    return klickapåKnapp(4);
  }));
  knappar.push(new Knapp('5', 110, 270, 60, 40, function() {
    return klickapåKnapp(5);
  }));
  knappar.push(new Knapp('6', 180, 270, 60, 40, function() {
    return klickapåKnapp(6);
  }));
  knappar.push(new Knapp('7', 40, 320, 60, 40, function() {
    return klickapåKnapp(7);
  }));
  knappar.push(new Knapp('8', 110, 320, 60, 40, function() {
    return klickapåKnapp(8);
  }));
  knappar.push(new Knapp('9', 180, 320, 60, 40, function() {
    return klickapåKnapp(9);
  }));
  knappar.push(new Knapp('0', 110, 370, 60, 40, function() {
    return klickapåKnapp(0);
  }));
  op2 = function(f) {
    var x, y;
    stack.push(stack[3]);
    x = stack.shift();
    y = stack.shift();
    stack.unshift(f(x, y));
    return inmatning = false;
  };
  op1 = function(f) {
    stack.unshift(f(stack.shift()));
    return inmatning = false;
  };
  op0 = function(f) {
    stack.pop();
    stack.unshift(f());
    return inmatning = false;
  };
  knappar.push(new Knapp('+', 250, 220, 60, 40, function() {
    return op2(function(x, y) {
      return x + y;
    });
  }));
  knappar.push(new Knapp('*', 250, 270, 60, 40, function() {
    return op2(function(x, y) {
      return x * y;
    });
  }));
  knappar.push(new Knapp('/', 250, 320, 60, 40, function() {
    return op2(function(x, y) {
      return y / x;
    });
  }));
  knappar.push(new Knapp('-', 250, 370, 60, 40, function() {
    return op2(function(x, y) {
      return y - x;
    });
  }));
  knappar.push(new Knapp('**', 320, 170, 60, 40, function() {
    return op2(function(x, y) {
      return y ** x;
    });
  }));
  knappar.push(new Knapp('1/x', 250, 170, 60, 40, function() {
    return op1(function(x) {
      return 1 / x;
    });
  }));
  knappar.push(new Knapp('x!', 320, 220, 60, 40, function() {
    var i, j, len, ref, res, x;
    x = stack[0];
    res = 1;
    ref = range(1, x + 1);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      res *= i;
    }
    stack[0] = res;
    return inmatning = false;
  }));
  knappar.push(new Knapp('fac', 320, 420, 60, 40, function() {
    stack[0] *= stack[1];
    stack[1]++;
    return inmatning = false;
  }));
  knappar.push(new Knapp('fib', 250, 420, 60, 40, function() {
    var x;
    x = stack[0];
    x += stack[1];
    stack[0] = x;
    return inmatning = false;
  }));
  knappar.push(new Knapp('sqr', 180, 420, 60, 40, function() {
    stack[0] = (stack[0] + stack[1] / stack[0]) / 2;
    return inmatning = false;
  }));
  knappar.push(new Knapp('PI', 320, 320, 60, 40, function() {
    return op0(function() {
      return PI;
    });
  }));
  knappar.push(new Knapp('swp', 320, 370, 60, 40, function() {
    [stack[0], stack[1]] = [stack([1], stack[0])];
    return inmatning = false;
  }));
  return knappar.push(new Knapp('cla', 320, 270, 60, 40, function() {
    stack = [0, 0, 0, 0];
    return inmatning = false;
  }));
};

klickapåKnapp = function(siffra) {
  if (inmatning) {
    return stack[0] = 10 * stack[0] + siffra;
  } else {
    stack[0] = siffra;
    return inmatning = true;
  }
};

window.draw = function() {
  var i, j, k, knapp, len, len1, tal;
  background('gray');
  for (j = 0, len = knappar.length; j < len; j++) {
    knapp = knappar[j];
    knapp.rita();
  }
  textAlign(LEFT);
  for (i = k = 0, len1 = stack.length; k < len1; i = ++k) {
    tal = stack[i];
    text('xyzt'[i] + ':', 10, 25 + (4 - i) * 25);
    text(tal, 50, 25 + (4 - i) * 25);
  }
  return textAlign(CENTER);
};

window.mousePressed = function() {
  var j, knapp, len, results;
  results = [];
  for (j = 0, len = knappar.length; j < len; j++) {
    knapp = knappar[j];
    if (knapp.inuti()) {
      results.push(knapp.klick());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsYy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxjYWxjLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBd0NpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsRUFBQSxFQUFBLEVBQUEsU0FBQSxFQUFBLGFBQUEsRUFBQSxPQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFFakYsT0FBQSxHQUFVOztBQUNWLEtBQUEsR0FBUTtFQUFDLENBQUQ7RUFBRyxDQUFIO0VBQUssQ0FBTDtFQUFPLENBQVA7OztBQUNSLFNBQUEsR0FBWTs7QUFDWixFQUFBLEdBQUs7O0FBQ0wsS0FBQSxHQUFRLE9BQU8sQ0FBQzs7QUFDaEIsS0FBQSxHQUFRLENBQUMsQ0FBQzs7QUFFSixRQUFOLE1BQUEsTUFBQTtFQUNDLFdBQWMsTUFBQSxJQUFBLElBQUEsR0FBQSxHQUFBLE9BQUEsQ0FBQTtJQUFDLElBQUMsQ0FBQTtJQUFNLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtFQUFyQjs7RUFDZCxJQUFPLENBQUEsQ0FBQTtJQUNOLElBQUEsQ0FBSyxJQUFDLENBQUEsQ0FBTixFQUFRLElBQUMsQ0FBQSxDQUFULEVBQVcsSUFBQyxDQUFBLENBQVosRUFBYyxJQUFDLENBQUEsQ0FBZjtXQUNBLElBQUEsQ0FBSyxJQUFDLENBQUEsS0FBTixFQUFZLElBQUMsQ0FBQSxDQUFiLEVBQWUsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFsQjtFQUZNOztFQUdQLEtBQVEsQ0FBQSxDQUFBO1dBQUcsQ0FBQSxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBTixHQUFVLE1BQVYsSUFBVSxNQUFWLEdBQW1CLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUF6QixD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OztJQUNDLElBQUcsS0FBSyxDQUFDLEtBQU4sQ0FBQSxDQUFIO21CQUFzQixLQUFLLENBQUMsS0FBTixDQUFBLEdBQXRCO0tBQUEsTUFBQTsyQkFBQTs7RUFERCxDQUFBOztBQURxQiIsInNvdXJjZXNDb250ZW50IjpbIiMgw5Z2cmlnYSBzaWZmcm9yXHJcbiMgQWRkaXRpb24sIE11bHRpcGxpa2F0aW9uLCBEaXZpc2lvbixTdWJ0cmFrdGlvbiwgMS94XHJcbiMgUGkgKHggPT4gMy4xNClcclxuIyBTd2FwICh4IG9jaCB5IGJ5dGVyIHBsYXRzKVxyXG4jIENsZWFyIEFsbCAoeHl6dCAtPiAwMDAwKVxyXG4jIFJvbGwgRG93biAoeHl6dCAtPiB5enR4KVxyXG4jIENoYW5nZSBTaWduICh4IC0+IC14KVxyXG4jIEJhY2tzcGFjZSAoc2lzdGEgc2lmZnJhbiB0YXMgYm9ydCBlbGxlciB4IHJlbnNhcylcclxuIyBVcHBow7ZqdCB0aWxsICh4IC0+IHkqKngpXHJcbiMgS3ZhZHJhdHJvdCAoeCAtPiBzcXJ0KHgpKVxyXG4jIERlY2ltYWxwdW5rdFxyXG4jIEJpdGhhbnRlcmluZzogYW5kIG9yIHhvclxyXG4jIEZha3VsdGV0ICg1ICEgLT4gMTIwKVxyXG4jIExvZ2FyaXRtZXIgVHJpZ29ub21ldHJpXHJcbiMgRXhwb25lbnRcclxuXHJcbiMgaHR0cHM6Ly9wNWpzLm9yZy9yZWZlcmVuY2VcclxuIyAgY3JlYXRlQ2FudmFzIHdpZHRoIGhlaWdodCB3aW5kb3cuc2V0dXAgd2luZG93LmRyYXcgYmFja2dyb3VuZFxyXG4jICByZWN0TW9kZSBDRU5URVIgcmVjdCBjaXJjbGVcclxuIyAgZmlsbCBzdHJva2Ugc3Ryb2tlV2VpZ2h0XHJcbiMgIHRleHQgdGV4dEZvbnQgdGV4dFNpemUgdGV4dEFsaWduIENFTlRFUiBMRUZUXHJcbiMgIG1vdXNlUHJlc3NlZCBtb3VzZU1vdmVkIG1vdXNlWCBtb3VzZVlcclxuXHJcbiMgaHR0cHM6Ly93d3cudzNzY2hvb2xzLmNvbS9qc1xyXG4jICB3aW5kb3dXaWR0aCB3aW5kb3dIZWlnaHRcclxuIyAgcmVkIGdyZWVuIGJsdWUgLi4uXHJcbiMgIHB1c2ggcG9wXHJcbiMgIHVuc2hpZnQgc2hpZnRcclxuIyAgY29uc29sZS5sb2dcclxuXHJcbiMgaHR0cHM6Ly9jb2ZmZWVzY3JpcHQub3JnXHJcbiMgIGNsYXNzIGNvbnN0cnVjdG9yIG5ld1xyXG4jICAoKSAtPlxyXG4jICBmb3IgaW5cclxuIyAgaWYgdGhlbiBlbHNlXHJcblxyXG4jIGh0dHBzOi8vbG9kYXNoLmNvbVxyXG4jICBfLnJhbmdlIF8uc2FtcGxlIF8uc2FtcGxlU2l6ZVxyXG5cclxuIyBDaHJpc3RlcnMgbmFtbjpcclxuIyAga25hcHBhciBzdGFjayBpbm1hdG5pbmcga29vcmRpbmF0ZXIgS25hcHAgcml0YSBpbnV0aSBAdGl0ZWwgQHggQHkgQHcgQGggQGtsaWNrXHJcblxyXG5rbmFwcGFyID0gW11cclxuc3RhY2sgPSBbMSwyLDMsNF0gIyBbeCx5LHosdF0gWzAsMSwyLDNdXHJcbmlubWF0bmluZyA9IGZhbHNlXHJcblBJID0gMy4xNDE1OTI2NTM1OVxyXG5wcmludCA9IGNvbnNvbGUubG9nXHJcbnJhbmdlID0gXy5yYW5nZVxyXG5cclxuY2xhc3MgS25hcHBcclxuXHRjb25zdHJ1Y3RvciA6IChAdGl0ZWwsQHgsQHksQHcsQGgsQGtsaWNrKSAtPlxyXG5cdHJpdGEgOiAtPlxyXG5cdFx0cmVjdCBAeCxAeSxAdyxAaFxyXG5cdFx0dGV4dCBAdGl0ZWwsQHgsQHkrM1xyXG5cdGludXRpIDogLT4gQHgtQHcvMiA8IG1vdXNlWCA8IEB4K0B3LzIgYW5kIEB5LUBoLzIgPCBtb3VzZVkgPCBAeStAaC8yXHJcblx0XHJcbndpbmRvdy5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIDM2MCw0NTBcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHR0ZXh0Rm9udCAnQ291cmllciBOZXcnXHJcblx0dGV4dFNpemUgMjJcclxuXHR0ZXh0QWxpZ24gQ0VOVEVSLENFTlRFUlxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICdlbnRlcicsNzUsMTcwLDEzMCw0MCwgLT5cclxuXHRcdHN0YWNrLnVuc2hpZnQgc3RhY2tbMF1cclxuXHRcdHN0YWNrLnBvcCgpXHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICdjbHgnLDE4MCwxNzAsNjAsNDAsIC0+IHN0YWNrWzBdID0gMFxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICcxJywgNDAsMjIwLDYwLDQwLCAtPiBrbGlja2Fww6VLbmFwcCAxXHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnMicsMTEwLDIyMCw2MCw0MCwgLT4ga2xpY2thcMOlS25hcHAgMlxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJzMnLDE4MCwyMjAsNjAsNDAsIC0+IGtsaWNrYXDDpUtuYXBwIDNcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICc0JywgNDAsMjcwLDYwLDQwLCAtPiBrbGlja2Fww6VLbmFwcCA0XHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnNScsMTEwLDI3MCw2MCw0MCwgLT4ga2xpY2thcMOlS25hcHAgNVxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJzYnLDE4MCwyNzAsNjAsNDAsIC0+IGtsaWNrYXDDpUtuYXBwIDZcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICc3JywgNDAsMzIwLDYwLDQwLCAtPiBrbGlja2Fww6VLbmFwcCA3XHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnOCcsMTEwLDMyMCw2MCw0MCwgLT4ga2xpY2thcMOlS25hcHAgOFxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJzknLDE4MCwzMjAsNjAsNDAsIC0+IGtsaWNrYXDDpUtuYXBwIDlcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICcwJywxMTAsMzcwLDYwLDQwLCAtPiBrbGlja2Fww6VLbmFwcCAwXHJcblxyXG5cdG9wMiA9IChmKSAtPlxyXG5cdFx0c3RhY2sucHVzaCBzdGFja1szXVxyXG5cdFx0eCA9IHN0YWNrLnNoaWZ0KClcclxuXHRcdHkgPSBzdGFjay5zaGlmdCgpXHJcblx0XHRzdGFjay51bnNoaWZ0IGYgeCx5XHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxuXHRvcDEgPSAoZikgLT5cclxuXHRcdHN0YWNrLnVuc2hpZnQgZiBzdGFjay5zaGlmdCgpXHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxuXHRvcDAgPSAoZikgLT5cclxuXHRcdHN0YWNrLnBvcCgpXHJcblx0XHRzdGFjay51bnNoaWZ0IGYoKVxyXG5cdFx0aW5tYXRuaW5nID0gZmFsc2VcclxuXHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnKycsMjUwLDIyMCw2MCw0MCwgLT4gb3AyICh4LHkpIC0+IHggKyB5XHJcblxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJyonLDI1MCwyNzAsNjAsNDAsIC0+IG9wMiAoeCx5KSAtPiB4ICogeVxyXG5cdFx0XHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnLycsMjUwLDMyMCw2MCw0MCwgLT4gb3AyICh4LHkpIC0+IHkgLyB4XHJcblx0XHRcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICctJywyNTAsMzcwLDYwLDQwLCAtPiBvcDIgKHgseSkgLT4geSAtIHhcclxuXHRcdFxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJyoqJywzMjAsMTcwLDYwLDQwLCAtPiBvcDIgKHgseSkgLT4geSAqKiB4XHJcblx0XHRcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICcxL3gnLDI1MCwxNzAsNjAsNDAsIC0+IG9wMSAoeCkgLT4gMS94XHJcblx0XHRcclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICd4IScsMzIwLDIyMCw2MCw0MCwgLT5cclxuXHRcdHggPSBzdGFja1swXVxyXG5cdFx0cmVzPTFcclxuXHRcdGZvciBpIGluIHJhbmdlIDEseCsxXHJcblx0XHRcdHJlcyAqPSBpXHJcblx0XHRzdGFja1swXSA9IHJlc1xyXG5cdFx0aW5tYXRuaW5nID0gZmFsc2VcclxuXHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnZmFjJywzMjAsNDIwLDYwLDQwLCAtPlxyXG5cdFx0c3RhY2tbMF0qPSBzdGFja1sxXVxyXG5cdFx0c3RhY2tbMV0rK1xyXG5cdFx0aW5tYXRuaW5nID0gZmFsc2VcclxuXHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnZmliJywyNTAsNDIwLDYwLDQwLCAtPlxyXG5cdFx0eCA9IHN0YWNrWzBdXHJcblx0XHR4ICs9IHN0YWNrWzFdXHJcblx0XHRzdGFja1swXSA9IHggXHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICdzcXInLDE4MCw0MjAsNjAsNDAsIC0+XHJcblx0XHRzdGFja1swXSA9IChzdGFja1swXSArIHN0YWNrWzFdIC8gc3RhY2tbMF0pLzJcclxuXHRcdGlubWF0bmluZyA9IGZhbHNlXHJcblxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJ1BJJywzMjAsMzIwLDYwLDQwLCAtPiBvcDAgKCkgLT4gUElcclxuXHJcblx0a25hcHBhci5wdXNoIG5ldyBLbmFwcCAnc3dwJywzMjAsMzcwLDYwLDQwLCAtPlxyXG5cdFx0W3N0YWNrWzBdLHN0YWNrWzFdXSA9IFtzdGFjayBbMV0sc3RhY2tbMF1dXHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICdjbGEnLDMyMCwyNzAsNjAsNDAsIC0+XHJcblx0XHRzdGFjaz1bMCwwLDAsMF1cclxuXHRcdGlubWF0bmluZyA9IGZhbHNlXHJcblxyXG5rbGlja2Fww6VLbmFwcCA9IChzaWZmcmEpIC0+XHJcblx0aWYgaW5tYXRuaW5nXHJcblx0XHRzdGFja1swXSA9IDEwICogc3RhY2tbMF0gKyBzaWZmcmFcclxuXHRlbHNlXHJcblx0XHRzdGFja1swXSA9IHNpZmZyYVxyXG5cdFx0aW5tYXRuaW5nID0gdHJ1ZVxyXG5cclxud2luZG93LmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgJ2dyYXknXHJcblx0Zm9yIGtuYXBwIGluIGtuYXBwYXJcclxuXHRcdGtuYXBwLnJpdGEoKVxyXG5cdHRleHRBbGlnbiBMRUZUXHJcblx0Zm9yIHRhbCxpIGluIHN0YWNrXHJcblx0XHR0ZXh0ICd4eXp0J1tpXSsnOicsMTAsMjUrKDQtaSkqMjVcclxuXHRcdHRleHQgdGFsLCA1MCwyNSsoNC1pKSoyNVxyXG5cdHRleHRBbGlnbiBDRU5URVJcclxuXHJcbndpbmRvdy5tb3VzZVByZXNzZWQgPSAtPlxyXG5cdGZvciBrbmFwcCBpbiBrbmFwcGFyXHJcblx0XHRpZiBrbmFwcC5pbnV0aSgpIHRoZW4ga25hcHAua2xpY2soKVxyXG4iXX0=
//# sourceURL=c:\github\2023\045-Numa\coffee\calc.coffee