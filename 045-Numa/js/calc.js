// Generated by CoffeeScript 2.5.1
// Övriga siffror
// Addition, Multiplikation, Division, 1/x
// Pi (x => 3.14)
// Swap (x och y byter plats)
// Clear All (xyzt -> 0000)
// Roll Down (xyzt -> yztx)
// Change Sign (x -> -x)
// Backspace (sista siffran tas bort eller x rensas)
// Upphöjt till (x -> y**x)
// Kvadratrot (x -> sqrt(x))
// Decimalpunkt
// Bithantering: and or xor
// Fakultet (5 ! -> 120)
// Logaritmer Trigonometri
// Exponent

// https://p5js.org/reference
//  createCanvas width height window.setup window.draw background
//  rectMode CENTER rect circle
//  fill stroke strokeWeight
//  text textFont textSize textAlign CENTER LEFT
//  mousePressed mouseMoved mouseX mouseY

// https://www.w3schools.com/js
//  windowWidth windowHeight
//  red green blue ...
//  push pop
//  unshift shift
//  console.log

// https://coffeescript.org
//  class constructor new
//  () ->
//  for in
//  if then else

// https://lodash.com
//  _.range _.sample _.sampleSize

// Christers namn:
//  knappar stack inmatning koordinater Knapp rita inuti @titel @x @y @w @h @klick
var Knapp, inmatning, knappar, koordinater, stack;

knappar = [];

stack = [
  0,
  0,
  0,
  0 // [x,y,z,t] [0,1,2,3]
];

inmatning = false;

koordinater = '';

Knapp = class Knapp {
  constructor(titel, x1, y1, w, h, klick) {
    this.titel = titel;
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
    this.klick = klick;
  }

  rita() {
    rect(this.x, this.y, this.w, this.h);
    return text(this.titel, this.x, this.y + 3);
  }

  inuti() {
    return (this.x - this.w / 2 < mouseX && mouseX < this.x + this.w / 2) && (this.y - this.h / 2 < mouseY && mouseY < this.y + this.h / 2);
  }

};

window.setup = function() {
  createCanvas(400, 400);
  rectMode(CENTER);
  textFont('Courier New');
  textSize(30);
  textAlign(CENTER, CENTER);
  knappar.push(new Knapp('enter', 60, 170, 100, 40, function() {
    stack.unshift(stack[0]);
    stack.pop();
    return inmatning = false;
  }));
  knappar.push(new Knapp('clx', 200, 170, 60, 40, function() {
    return stack[0] = 0;
  }));
  knappar.push(new Knapp('1', 40, 220, 60, 40, function() {
    if (inmatning) {
      return stack[0] = 10 * stack[0] + 1;
    } else {
      stack[0] = 1;
      return inmatning = true;
    }
  }));
  return knappar.push(new Knapp('+', 200, 220, 60, 40, function() {
    var x, y;
    stack.push(stack[3]);
    x = stack.shift();
    y = stack.shift();
    stack.unshift(x + y);
    return inmatning = false;
  }));
};

window.draw = function() {
  var i, j, k, knapp, len, len1, tal;
  background('gray');
  for (j = 0, len = knappar.length; j < len; j++) {
    knapp = knappar[j];
    knapp.rita();
  }
  textAlign(LEFT);
  for (i = k = 0, len1 = stack.length; k < len1; i = ++k) {
    tal = stack[i];
    text('xyzt'[i] + ':', 10, 25 + (4 - i) * 25);
    text(tal, 50, 25 + (4 - i) * 25);
  }
  textAlign(CENTER);
  return text(koordinater, width / 2, height - 20);
};

window.mousePressed = function() {
  var j, knapp, len, results;
  results = [];
  for (j = 0, len = knappar.length; j < len; j++) {
    knapp = knappar[j];
    if (knapp.inuti()) {
      results.push(knapp.klick());
    } else {
      results.push(void 0);
    }
  }
  return results;
};

window.mouseMoved = function() {
  return koordinater = `x=${mouseX} y=${mouseY}`;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsYy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxjYWxjLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBd0NpRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLEtBQUEsRUFBQSxTQUFBLEVBQUEsT0FBQSxFQUFBLFdBQUEsRUFBQTs7QUFFakYsT0FBQSxHQUFVOztBQUNWLEtBQUEsR0FBUTtFQUFDLENBQUQ7RUFBRyxDQUFIO0VBQUssQ0FBTDtFQUFPLENBQVA7OztBQUNSLFNBQUEsR0FBWTs7QUFDWixXQUFBLEdBQWM7O0FBRVIsUUFBTixNQUFBLE1BQUE7RUFDQyxXQUFjLE1BQUEsSUFBQSxJQUFBLEdBQUEsR0FBQSxPQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBTSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7RUFBckI7O0VBRWQsSUFBTyxDQUFBLENBQUE7SUFDTixJQUFBLENBQUssSUFBQyxDQUFBLENBQU4sRUFBUSxJQUFDLENBQUEsQ0FBVCxFQUFXLElBQUMsQ0FBQSxDQUFaLEVBQWMsSUFBQyxDQUFBLENBQWY7V0FDQSxJQUFBLENBQUssSUFBQyxDQUFBLEtBQU4sRUFBWSxJQUFDLENBQUEsQ0FBYixFQUFlLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBbEI7RUFGTTs7RUFJUCxLQUFRLENBQUEsQ0FBQTtXQUNQLENBQUEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBRCxHQUFHLENBQU4sR0FBVSxNQUFWLElBQVUsTUFBVixHQUFtQixJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBekIsQ0FBQSxJQUErQixDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFOLEdBQVUsTUFBVixJQUFVLE1BQVYsR0FB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RUFBQSxLQUFBLHlDQUFBOztJQUNDLElBQUcsS0FBSyxDQUFDLEtBQU4sQ0FBQSxDQUFIO21CQUFzQixLQUFLLENBQUMsS0FBTixDQUFBLEdBQXRCO0tBQUEsTUFBQTsyQkFBQTs7RUFERCxDQUFBOztBQURxQjs7QUFJdEIsTUFBTSxDQUFDLFVBQVAsR0FBb0IsUUFBQSxDQUFBLENBQUE7U0FBRyxXQUFBLEdBQWMsQ0FBQSxFQUFBLENBQUEsQ0FBSyxNQUFMLENBQUEsR0FBQSxDQUFBLENBQWlCLE1BQWpCLENBQUE7QUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIjIMOWdnJpZ2Egc2lmZnJvclxyXG4jIEFkZGl0aW9uLCBNdWx0aXBsaWthdGlvbiwgRGl2aXNpb24sIDEveFxyXG4jIFBpICh4ID0+IDMuMTQpXHJcbiMgU3dhcCAoeCBvY2ggeSBieXRlciBwbGF0cylcclxuIyBDbGVhciBBbGwgKHh5enQgLT4gMDAwMClcclxuIyBSb2xsIERvd24gKHh5enQgLT4geXp0eClcclxuIyBDaGFuZ2UgU2lnbiAoeCAtPiAteClcclxuIyBCYWNrc3BhY2UgKHNpc3RhIHNpZmZyYW4gdGFzIGJvcnQgZWxsZXIgeCByZW5zYXMpXHJcbiMgVXBwaMO2anQgdGlsbCAoeCAtPiB5Kip4KVxyXG4jIEt2YWRyYXRyb3QgKHggLT4gc3FydCh4KSlcclxuIyBEZWNpbWFscHVua3RcclxuIyBCaXRoYW50ZXJpbmc6IGFuZCBvciB4b3JcclxuIyBGYWt1bHRldCAoNSAhIC0+IDEyMClcclxuIyBMb2dhcml0bWVyIFRyaWdvbm9tZXRyaVxyXG4jIEV4cG9uZW50XHJcblxyXG4jIGh0dHBzOi8vcDVqcy5vcmcvcmVmZXJlbmNlXHJcbiMgIGNyZWF0ZUNhbnZhcyB3aWR0aCBoZWlnaHQgd2luZG93LnNldHVwIHdpbmRvdy5kcmF3IGJhY2tncm91bmRcclxuIyAgcmVjdE1vZGUgQ0VOVEVSIHJlY3QgY2lyY2xlXHJcbiMgIGZpbGwgc3Ryb2tlIHN0cm9rZVdlaWdodFxyXG4jICB0ZXh0IHRleHRGb250IHRleHRTaXplIHRleHRBbGlnbiBDRU5URVIgTEVGVFxyXG4jICBtb3VzZVByZXNzZWQgbW91c2VNb3ZlZCBtb3VzZVggbW91c2VZXHJcblxyXG4jIGh0dHBzOi8vd3d3Lnczc2Nob29scy5jb20vanNcclxuIyAgd2luZG93V2lkdGggd2luZG93SGVpZ2h0XHJcbiMgIHJlZCBncmVlbiBibHVlIC4uLlxyXG4jICBwdXNoIHBvcFxyXG4jICB1bnNoaWZ0IHNoaWZ0XHJcbiMgIGNvbnNvbGUubG9nXHJcblxyXG4jIGh0dHBzOi8vY29mZmVlc2NyaXB0Lm9yZ1xyXG4jICBjbGFzcyBjb25zdHJ1Y3RvciBuZXdcclxuIyAgKCkgLT5cclxuIyAgZm9yIGluXHJcbiMgIGlmIHRoZW4gZWxzZVxyXG5cclxuIyBodHRwczovL2xvZGFzaC5jb21cclxuIyAgXy5yYW5nZSBfLnNhbXBsZSBfLnNhbXBsZVNpemVcclxuXHJcbiMgQ2hyaXN0ZXJzIG5hbW46XHJcbiMgIGtuYXBwYXIgc3RhY2sgaW5tYXRuaW5nIGtvb3JkaW5hdGVyIEtuYXBwIHJpdGEgaW51dGkgQHRpdGVsIEB4IEB5IEB3IEBoIEBrbGlja1xyXG5cclxua25hcHBhciA9IFtdXHJcbnN0YWNrID0gWzAsMCwwLDBdICMgW3gseSx6LHRdIFswLDEsMiwzXVxyXG5pbm1hdG5pbmcgPSBmYWxzZVxyXG5rb29yZGluYXRlciA9ICcnXHJcblxyXG5jbGFzcyBLbmFwcFxyXG5cdGNvbnN0cnVjdG9yIDogKEB0aXRlbCxAeCxAeSxAdyxAaCxAa2xpY2spIC0+XHJcblxyXG5cdHJpdGEgOiAtPlxyXG5cdFx0cmVjdCBAeCxAeSxAdyxAaFxyXG5cdFx0dGV4dCBAdGl0ZWwsQHgsQHkrM1xyXG5cclxuXHRpbnV0aSA6IC0+XHJcblx0XHRAeC1Ady8yIDwgbW91c2VYIDwgQHgrQHcvMiBhbmQgQHktQGgvMiA8IG1vdXNlWSA8IEB5K0BoLzJcclxuXHRcclxud2luZG93LnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgNDAwLDQwMFxyXG5cdHJlY3RNb2RlIENFTlRFUlxyXG5cdHRleHRGb250ICdDb3VyaWVyIE5ldydcclxuXHR0ZXh0U2l6ZSAzMFxyXG5cdHRleHRBbGlnbiBDRU5URVIsQ0VOVEVSXHJcblxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJ2VudGVyJyw2MCwxNzAsMTAwLDQwLCAtPlxyXG5cdFx0c3RhY2sudW5zaGlmdCBzdGFja1swXVxyXG5cdFx0c3RhY2sucG9wKClcclxuXHRcdGlubWF0bmluZyA9IGZhbHNlXHJcblxyXG5cdGtuYXBwYXIucHVzaCBuZXcgS25hcHAgJ2NseCcsMjAwLDE3MCw2MCw0MCwgLT5cclxuXHRcdHN0YWNrWzBdID0gMFxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICcxJyw0MCwyMjAsNjAsNDAsIC0+XHJcblx0XHRpZiBpbm1hdG5pbmdcclxuXHRcdFx0c3RhY2tbMF0gPSAxMCAqIHN0YWNrWzBdICsgMVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRzdGFja1swXSA9IDFcclxuXHRcdFx0aW5tYXRuaW5nID0gdHJ1ZVxyXG5cclxuXHRrbmFwcGFyLnB1c2ggbmV3IEtuYXBwICcrJywyMDAsMjIwLDYwLDQwLCAtPlxyXG5cdFx0c3RhY2sucHVzaCBzdGFja1szXVxyXG5cdFx0eCA9IHN0YWNrLnNoaWZ0KClcclxuXHRcdHkgPSBzdGFjay5zaGlmdCgpXHJcblx0XHRzdGFjay51bnNoaWZ0IHggKyB5XHJcblx0XHRpbm1hdG5pbmcgPSBmYWxzZVxyXG5cclxud2luZG93LmRyYXcgPSAtPlxyXG5cdGJhY2tncm91bmQgJ2dyYXknXHJcblx0Zm9yIGtuYXBwIGluIGtuYXBwYXJcclxuXHRcdGtuYXBwLnJpdGEoKVxyXG5cdHRleHRBbGlnbiBMRUZUXHJcblx0Zm9yIHRhbCxpIGluIHN0YWNrXHJcblx0XHR0ZXh0ICd4eXp0J1tpXSsnOicsMTAsMjUrKDQtaSkqMjVcclxuXHRcdHRleHQgdGFsLCA1MCwyNSsoNC1pKSoyNVxyXG5cdHRleHRBbGlnbiBDRU5URVJcclxuXHR0ZXh0IGtvb3JkaW5hdGVyLHdpZHRoLzIsaGVpZ2h0LTIwXHJcblxyXG53aW5kb3cubW91c2VQcmVzc2VkID0gLT5cclxuXHRmb3Iga25hcHAgaW4ga25hcHBhclxyXG5cdFx0aWYga25hcHAuaW51dGkoKSB0aGVuIGtuYXBwLmtsaWNrKClcclxuXHJcbndpbmRvdy5tb3VzZU1vdmVkID0gLT4ga29vcmRpbmF0ZXIgPSBcIng9I3ttb3VzZVh9IHk9I3ttb3VzZVl9XCJcclxuIl19
//# sourceURL=c:\github\2023\045-Numa\coffee\calc.coffee