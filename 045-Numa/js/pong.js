// Generated by CoffeeScript 2.5.1
// Pong
var Ball, Paddle, ball, paddle, print, range;

ball = null;

print = console.log;

range = _.range;

paddle = null;

Ball = class Ball {
  constructor(x1, y1, dx1, dy1) {
    this.x = x1;
    this.y = y1;
    this.dx = dx1;
    this.dy = dy1;
    this.antal = 0;
  }

  draw() {
    strokeWeight(2);
    this.antal += 1;
    fill('white');
    return circle(this.x, this.y, 10);
  }

  updatePosition() {
    this.x += this.dx;
    return this.y += this.dy;
  }

  updateSpeed() {
    if (this.x - this.r < 0 || width < this.x + this.r) {
      this.dx = -this.dx;
    }
    if (height < this.y + this.r) {
      return this.dy = -this.dy;
    } else {
      return this.dy += 0.1;
    }
  }

  krock(other) {
    var dx, dy;
    dx = this.x - other.x;
    dy = this.y - other.y;
    return this.r > sqrt(dx * dx + dy * dy);
  }

};

// studs : (other) ->
// 	[other.dx,@dx] = [@dx,other.dx]
// 	[other.dy,@dy] = [@dy,other.dy]
Paddle = class Paddle {
  constructor(x1, y1, w, h) {
    this.x = x1;
    this.y = y1;
    this.w = w;
    this.h = h;
  }

  draw() {
    strokeWeight(2);
    fill('white');
    return rect(this.x, this.y, this.w, this.h);
  }

  updatePosition() {
    this.x += this.dx;
    return this.y += this.dy;
  }

  updateSpeed() {
    if (this.x - this.r < 0 || width < this.x + this.r) {
      this.dx = -this.dx;
    }
    if (height < this.y + this.r) {
      return this.dy = -this.dy;
    } else {
      return this.dy += 1;
    }
  }

  studs(other) {
    return other.dy = -other.dy;
  }

  inuti(x, y) {
    return (paddle.x < x && x < paddle.x + paddle.w) && (paddle.y < y && y < paddle.y + paddle.h);
  }

};

window.setup = function() {
  createCanvas(windowWidth - 50, windowHeight - 50);
  stroke('black');
  paddle = new Paddle(width / 2, height - 50, 100, 20);
  return ball = new Ball(width / 2, height - 300, 0, 0);
};

window.draw = function() {
  background('gray');
  textSize(50);
  // text antal,100,100
  ball.updatePosition();
  ball.updateSpeed();
  paddle.draw();
  ball.draw();
  if (paddle.inuti(ball)) {
    print('smash!');
  }
  if (ball.krock(paddle)) {
    paddle.studs();
  }
  if (paddle.x > 0 && keyIsDown(LEFT_ARROW)) {
    paddle.x -= 5;
  }
  if (paddle.x + paddle.w < width && keyIsDown(RIGHT_ARROW)) {
    return paddle.x += 5;
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9uZy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlXFxwb25nLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQU07QUFBQSxJQUFBLElBQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxLQUFBLEVBQUE7O0FBQ04sSUFBQSxHQUFPOztBQUNQLEtBQUEsR0FBUSxPQUFPLENBQUM7O0FBQ2hCLEtBQUEsR0FBUSxDQUFDLENBQUM7O0FBQ1YsTUFBQSxHQUFPOztBQUVELE9BQU4sTUFBQSxLQUFBO0VBQ0MsV0FBYyxHQUFBLElBQUEsS0FBQSxLQUFBLENBQUE7SUFBQyxJQUFDLENBQUE7SUFBRSxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBRyxJQUFDLENBQUE7SUFBTyxJQUFDLENBQUEsS0FBRCxHQUFTO0VBQTdCOztFQUNkLElBQU8sQ0FBQSxDQUFBO0lBQ04sWUFBQSxDQUFhLENBQWI7SUFDQSxJQUFDLENBQUEsS0FBRCxJQUFVO0lBQ1YsSUFBQSxDQUFNLE9BQU47V0FDQSxNQUFBLENBQU8sSUFBQyxDQUFBLENBQVIsRUFBVSxJQUFDLENBQUEsQ0FBWCxFQUFhLEVBQWI7RUFKTTs7RUFLUCxjQUFpQixDQUFBLENBQUE7SUFDaEIsSUFBQyxDQUFBLENBQUQsSUFBTSxJQUFDLENBQUE7V0FDUCxJQUFDLENBQUEsQ0FBRCxJQUFNLElBQUMsQ0FBQTtFQUZTOztFQUdqQixXQUFjLENBQUEsQ0FBQTtJQUNiLElBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBSixHQUFRLENBQVIsSUFBYSxLQUFBLEdBQVEsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBNUI7TUFBbUMsSUFBQyxDQUFBLEVBQUQsR0FBTSxDQUFDLElBQUMsQ0FBQSxHQUEzQzs7SUFDQSxJQUFHLE1BQUEsR0FBUyxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFoQjthQUF1QixJQUFDLENBQUEsRUFBRCxHQUFNLENBQUMsSUFBQyxDQUFBLEdBQS9CO0tBQUEsTUFBQTthQUF1QyxJQUFDLENBQUEsRUFBRCxJQUFPLElBQTlDOztFQUZhOztFQUdkLEtBQVEsQ0FBQyxLQUFELENBQUE7QUFDVCxRQUFBLEVBQUEsRUFBQTtJQUFFLEVBQUEsR0FBSyxJQUFDLENBQUEsQ0FBRCxHQUFLLEtBQUssQ0FBQztJQUNoQixFQUFBLEdBQUssSUFBQyxDQUFBLENBQUQsR0FBSyxLQUFLLENBQUM7V0FDaEIsSUFBQyxDQUFBLENBQUQsR0FBSyxJQUFBLENBQUssRUFBQSxHQUFHLEVBQUgsR0FBUSxFQUFBLEdBQUcsRUFBaEI7RUFIRTs7QUFiVCxFQU5NOzs7OztBQTJCQSxTQUFOLE1BQUEsT0FBQTtFQUNDLFdBQWMsR0FBQSxJQUFBLEdBQUEsR0FBQSxDQUFBO0lBQUMsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0lBQUcsSUFBQyxDQUFBO0lBQUUsSUFBQyxDQUFBO0VBQVo7O0VBQ2QsSUFBTyxDQUFBLENBQUE7SUFDTixZQUFBLENBQWEsQ0FBYjtJQUNBLElBQUEsQ0FBTSxPQUFOO1dBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxDQUFOLEVBQVEsSUFBQyxDQUFBLENBQVQsRUFBVyxJQUFDLENBQUEsQ0FBWixFQUFjLElBQUMsQ0FBQSxDQUFmO0VBSE07O0VBSVAsY0FBaUIsQ0FBQSxDQUFBO0lBQ2hCLElBQUMsQ0FBQSxDQUFELElBQU0sSUFBQyxDQUFBO1dBQ1AsSUFBQyxDQUFBLENBQUQsSUFBTSxJQUFDLENBQUE7RUFGUzs7RUFHakIsV0FBYyxDQUFBLENBQUE7SUFDYixJQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUosR0FBUSxDQUFSLElBQWEsS0FBQSxHQUFRLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQTVCO01BQW1DLElBQUMsQ0FBQSxFQUFELEdBQU0sQ0FBQyxJQUFDLENBQUEsR0FBM0M7O0lBQ0EsSUFBRyxNQUFBLEdBQVMsSUFBQyxDQUFBLENBQUQsR0FBRyxJQUFDLENBQUEsQ0FBaEI7YUFBdUIsSUFBQyxDQUFBLEVBQUQsR0FBTSxDQUFDLElBQUMsQ0FBQSxHQUEvQjtLQUFBLE1BQUE7YUFBdUMsSUFBQyxDQUFBLEVBQUQsSUFBTyxFQUE5Qzs7RUFGYTs7RUFHZCxLQUFRLENBQUMsS0FBRCxDQUFBO1dBQ1AsS0FBSyxDQUFDLEVBQU4sR0FBVyxDQUFDLEtBQUssQ0FBQztFQURYOztFQUdSLEtBQVEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO1dBQ1AsQ0FBQSxNQUFNLENBQUMsQ0FBUCxHQUFXLENBQVgsSUFBVyxDQUFYLEdBQWUsTUFBTSxDQUFDLENBQVAsR0FBVyxNQUFNLENBQUMsQ0FBakMsQ0FBQSxJQUF1QyxDQUFBLE1BQU0sQ0FBQyxDQUFQLEdBQVcsQ0FBWCxJQUFXLENBQVgsR0FBZSxNQUFNLENBQUMsQ0FBUCxHQUFXLE1BQU0sQ0FBQyxDQUFqQztFQURoQzs7QUFmVDs7QUFrQkEsTUFBTSxDQUFDLEtBQVAsR0FBZSxRQUFBLENBQUEsQ0FBQTtFQUNkLFlBQUEsQ0FBYSxXQUFBLEdBQVksRUFBekIsRUFBNEIsWUFBQSxHQUFhLEVBQXpDO0VBQ0EsTUFBQSxDQUFPLE9BQVA7RUFDQSxNQUFBLEdBQVMsSUFBSSxNQUFKLENBQVcsS0FBQSxHQUFNLENBQWpCLEVBQW1CLE1BQUEsR0FBTyxFQUExQixFQUE2QixHQUE3QixFQUFpQyxFQUFqQztTQUNULElBQUEsR0FBTyxJQUFJLElBQUosQ0FBUyxLQUFBLEdBQU0sQ0FBZixFQUFpQixNQUFBLEdBQU8sR0FBeEIsRUFBNEIsQ0FBNUIsRUFBOEIsQ0FBOUI7QUFKTzs7QUFNZixNQUFNLENBQUMsSUFBUCxHQUFjLFFBQUEsQ0FBQSxDQUFBO0VBQ2IsVUFBQSxDQUFXLE1BQVg7RUFDQSxRQUFBLENBQVMsRUFBVCxFQUREOztFQUdDLElBQUksQ0FBQyxjQUFMLENBQUE7RUFDQSxJQUFJLENBQUMsV0FBTCxDQUFBO0VBQ0EsTUFBTSxDQUFDLElBQVAsQ0FBQTtFQUNBLElBQUksQ0FBQyxJQUFMLENBQUE7RUFDQSxJQUFHLE1BQU0sQ0FBQyxLQUFQLENBQWEsSUFBYixDQUFIO0lBQTBCLEtBQUEsQ0FBTSxRQUFOLEVBQTFCOztFQUNBLElBQUcsSUFBSSxDQUFDLEtBQUwsQ0FBVyxNQUFYLENBQUg7SUFBMEIsTUFBTSxDQUFDLEtBQVAsQ0FBQSxFQUExQjs7RUFDQSxJQUFHLE1BQU0sQ0FBQyxDQUFQLEdBQVcsQ0FBWCxJQUFpQixTQUFBLENBQVUsVUFBVixDQUFwQjtJQUE4QyxNQUFNLENBQUMsQ0FBUCxJQUFZLEVBQTFEOztFQUNBLElBQUcsTUFBTSxDQUFDLENBQVAsR0FBVyxNQUFNLENBQUMsQ0FBbEIsR0FBc0IsS0FBdEIsSUFBZ0MsU0FBQSxDQUFVLFdBQVYsQ0FBbkM7V0FBOEQsTUFBTSxDQUFDLENBQVAsSUFBWSxFQUExRTs7QUFYYSIsInNvdXJjZXNDb250ZW50IjpbIiMgUG9uZ1xyXG5iYWxsID0gbnVsbFxyXG5wcmludCA9IGNvbnNvbGUubG9nXHJcbnJhbmdlID0gXy5yYW5nZSBcclxucGFkZGxlPW51bGxcclxuXHJcbmNsYXNzIEJhbGxcclxuXHRjb25zdHJ1Y3RvciA6IChAeCxAeSwgQGR4LEBkeSkgLT4gQGFudGFsID0gMCBcclxuXHRkcmF3IDogLT5cclxuXHRcdHN0cm9rZVdlaWdodCAyXHJcblx0XHRAYW50YWwgKz0gMVxyXG5cdFx0ZmlsbCAgJ3doaXRlJyBcclxuXHRcdGNpcmNsZSBAeCxAeSwxMFxyXG5cdHVwZGF0ZVBvc2l0aW9uIDogLT5cclxuXHRcdEB4ICs9IEBkeFxyXG5cdFx0QHkgKz0gQGR5XHJcblx0dXBkYXRlU3BlZWQgOiAtPlxyXG5cdFx0aWYgQHgtQHIgPCAwIG9yIHdpZHRoIDwgQHgrQHIgdGhlbiBAZHggPSAtQGR4XHJcblx0XHRpZiBoZWlnaHQgPCBAeStAciB0aGVuIEBkeSA9IC1AZHkgZWxzZSBAZHkgKz0gMC4xXHJcblx0a3JvY2sgOiAob3RoZXIpIC0+XHJcblx0XHRkeCA9IEB4IC0gb3RoZXIueFxyXG5cdFx0ZHkgPSBAeSAtIG90aGVyLnlcclxuXHRcdEByID4gc3FydCBkeCpkeCArIGR5KmR5XHJcblx0IyBzdHVkcyA6IChvdGhlcikgLT5cclxuXHQjIFx0W290aGVyLmR4LEBkeF0gPSBbQGR4LG90aGVyLmR4XVxyXG5cdCMgXHRbb3RoZXIuZHksQGR5XSA9IFtAZHksb3RoZXIuZHldXHJcblxyXG5jbGFzcyBQYWRkbGVcclxuXHRjb25zdHJ1Y3RvciA6IChAeCxAeSwgQHcsQGgpIC0+XHJcblx0ZHJhdyA6IC0+XHJcblx0XHRzdHJva2VXZWlnaHQgMlxyXG5cdFx0ZmlsbCAgJ3doaXRlJ1xyXG5cdFx0cmVjdCBAeCxAeSxAdyxAaFxyXG5cdHVwZGF0ZVBvc2l0aW9uIDogLT5cclxuXHRcdEB4ICs9IEBkeFxyXG5cdFx0QHkgKz0gQGR5XHJcblx0dXBkYXRlU3BlZWQgOiAtPlxyXG5cdFx0aWYgQHgtQHIgPCAwIG9yIHdpZHRoIDwgQHgrQHIgdGhlbiBAZHggPSAtQGR4XHJcblx0XHRpZiBoZWlnaHQgPCBAeStAciB0aGVuIEBkeSA9IC1AZHkgZWxzZSBAZHkgKz0gMVxyXG5cdHN0dWRzIDogKG90aGVyKSAtPlxyXG5cdFx0b3RoZXIuZHkgPSAtb3RoZXIuZHlcclxuXHJcblx0aW51dGkgOiAoeCx5KSAtPlxyXG5cdFx0cGFkZGxlLnggPCB4IDwgcGFkZGxlLnggKyBwYWRkbGUudyBhbmQgcGFkZGxlLnkgPCB5IDwgcGFkZGxlLnkgKyBwYWRkbGUuaFxyXG5cclxud2luZG93LnNldHVwID0gLT5cclxuXHRjcmVhdGVDYW52YXMgd2luZG93V2lkdGgtNTAsd2luZG93SGVpZ2h0LTUwXHJcblx0c3Ryb2tlICdibGFjaydcclxuXHRwYWRkbGUgPSBuZXcgUGFkZGxlIHdpZHRoLzIsaGVpZ2h0LTUwLDEwMCwyMFxyXG5cdGJhbGwgPSBuZXcgQmFsbCB3aWR0aC8yLGhlaWdodC0zMDAsMCwwXHJcblxyXG53aW5kb3cuZHJhdyA9IC0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHR0ZXh0U2l6ZSA1MFxyXG5cdCMgdGV4dCBhbnRhbCwxMDAsMTAwXHJcblx0YmFsbC51cGRhdGVQb3NpdGlvbigpXHJcblx0YmFsbC51cGRhdGVTcGVlZCgpXHJcblx0cGFkZGxlLmRyYXcoKVxyXG5cdGJhbGwuZHJhdygpXHJcblx0aWYgcGFkZGxlLmludXRpIGJhbGwgdGhlbiBwcmludCAnc21hc2ghJ1xyXG5cdGlmIGJhbGwua3JvY2sgcGFkZGxlIHRoZW4gcGFkZGxlLnN0dWRzKClcclxuXHRpZiBwYWRkbGUueCA+IDAgYW5kIGtleUlzRG93biBMRUZUX0FSUk9XIHRoZW4gcGFkZGxlLnggLT0gNVxyXG5cdGlmIHBhZGRsZS54ICsgcGFkZGxlLncgPCB3aWR0aCBhbmQga2V5SXNEb3duIFJJR0hUX0FSUk9XIHRoZW4gcGFkZGxlLnggKz0gNVxyXG4iXX0=
//# sourceURL=c:\github\2023\045-Numa\coffee\pong.coffee